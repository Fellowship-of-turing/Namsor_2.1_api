{
    "openapi": "3.0.1",
    "info": {
        "title": "NamSor API v2",
        "description": "NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! ",
        "contact": {
            "name": "Namsor SAS",
            "url": "http://www.namsor.com/",
            "email": "contact@namsor.com"
        },
        "license": {
            "name": "NamSorAPI_Lic_v0.0.7",
            "url": "https://v2.namsor.com/NamSorAPIv2/assets/pdf/201803_NamSor_API_Terms_v007.pdf"
        },
        "version": "2.0.14"
    },
    "externalDocs": {
        "description": "NamSor API client SDKs v2 for Java, Python",
        "url": "https://github.com/namsor"
    },
    "servers": [
        {
            "url": "https://v2.namsor.com/NamSorAPIv2",
            "description": "namsor_v2",
            "variables": {}
        }
    ],
    "security": [{ "api_key": [] }],
    "tags": [
        {
            "name": "Personal",
            "description": "Personal names (anthroponyms) : gender, country origin/ethnicity, diaspora, US 'race'/ethniciy"
        },
        { "name": "Social", "description": "Social media and pseudonyms" },
        { "name": "Chinese", "description": "CHINESE special features" },
        { "name": "Japanese", "description": "JAPANESE special features" },
        { "name": "Admin", "description": "Administrative, system management." }
    ],
    "paths": {
        "/api2/json/nameType/{properNoun}": {
            "get": {
                "tags": ["General"],
                "summary": "Infer the likely type of a proper noun (personal name, brand name, place name etc.)",
                "operationId": "Name-Type",
                "parameters": [
                    {
                        "name": "properNoun",
                        "in": "path",
                        "required": true,
                        "schema": "dec1properNoundec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A typed name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "commonType": "String",
                                    "commonTypeAlt": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/country/{personalNameFull}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin.",
                "operationId": "Country",
                "parameters": [
                    {
                        "name": "personalNameFull",
                        "in": "path",
                        "required": true,
                        "schema": "dec1personalNameFulldec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A origined name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "score": "Number",
                                    "country": "String",
                                    "countryAlt": "String",
                                    "region": "String",
                                    "topRegion": "String",
                                    "subRegion": "String",
                                    "countriesTop": "Array",
                                    "probabilityCalibrated": "Number",
                                    "probabilityAltCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/origin/{firstName}/{lastName}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead.",
                "operationId": "Origin",
                "parameters": [
                    {
                        "name": "firstName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1firstNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "lastName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1lastNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A origined name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "countryOrigin": "String",
                                    "countryOriginAlt": "String",
                                    "countriesOriginTop": "Array",
                                    "score": "Number",
                                    "regionOrigin": "String",
                                    "topRegionOrigin": "String",
                                    "subRegionOrigin": "String",
                                    "probabilityCalibrated": "Number",
                                    "probabilityAltCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/stripeConnect": {
            "get": {
                "tags": ["Admin"],
                "summary": "Connects a Stripe Account.",
                "operationId": "Stripe-Connect",
                "parameters": [
                    {
                        "name": "scope",
                        "in": "query",
                        "schema": "dec1scopedec2",
                        "type": "String"
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "schema": "dec1codedec2",
                        "type": "String"
                    },
                    {
                        "name": "error",
                        "in": "query",
                        "schema": "dec1errordec2",
                        "type": "String"
                    },
                    {
                        "name": "error_description",
                        "in": "query",
                        "schema": "dec1error_descriptiondec2",
                        "type": "String"
                    }
                ],
                "responses": {}
            }
        },
        "/api2/json/charge": {
            "post": {
                "tags": ["Admin"],
                "summary": "Create a Stripe Customer, based on a payment card token (from secure StripeJS) and email.",
                "operationId": "Charge",
                "requestBody": {
                    "content": {
                        "*/*": {
                            "schema": {
                                "stripeToken": "String",
                                "stripeEmail": "String"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A stripe customerID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "apiKey": "String",
                                    "userId": "String",
                                    "admin": "Boolean",
                                    "vetted": "Boolean",
                                    "learnable": "Boolean",
                                    "anonymized": "Boolean",
                                    "partner": "Boolean",
                                    "striped": "Boolean",
                                    "corporate": "Boolean",
                                    "disabled": "Boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/paymentInfo/{token}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Get the Stripe payment information associated with the current google auth session token.",
                "operationId": "Payment-Information",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": "dec1tokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An session token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "apiKey": "String",
                                    "userId": "String",
                                    "admin": "Boolean",
                                    "vetted": "Boolean",
                                    "learnable": "Boolean",
                                    "anonymized": "Boolean",
                                    "partner": "Boolean",
                                    "striped": "Boolean",
                                    "corporate": "Boolean",
                                    "disabled": "Boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/updatePaymentDefault/{defautSourceId}/{token}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Update the default Stripe card associated with the current google auth session token.",
                "operationId": "Update-Payment-Default",
                "parameters": [
                    {
                        "name": "defautSourceId",
                        "in": "path",
                        "required": true,
                        "schema": "dec1defautSourceIddec2",
                        "type": "String"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": "dec1tokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An session token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "apiKey": "String",
                                    "userId": "String",
                                    "admin": "Boolean",
                                    "vetted": "Boolean",
                                    "learnable": "Boolean",
                                    "anonymized": "Boolean",
                                    "partner": "Boolean",
                                    "striped": "Boolean",
                                    "corporate": "Boolean",
                                    "disabled": "Boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/softwareVersion": {
            "get": {
                "tags": ["Admin"],
                "summary": "Get the current software version",
                "operationId": "Software-Version",
                "responses": {
                    "200": {
                        "description": "The current software version",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "softwareNameAndVersion": "String",
                                    "softwareVersion": "Array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/namsorCounter": {
            "get": {
                "tags": ["Admin"],
                "summary": "Get the overall API counter",
                "operationId": "Namsor-Counter",
                "responses": {
                    "200": {
                        "description": "The overall API counter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "softwareNameAndVersion": "String",
                                    "softwareVersion": "Array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/billingCurrencies": {
            "get": {
                "tags": ["Admin"],
                "summary": "List possible currency options for billing (USD, EUR, GBP, ...)",
                "operationId": "Billing-Currencies",
                "responses": {
                    "200": {
                        "description": "The supported billing currencies.",
                        "content": {
                            "application/json": {
                                "schema": { "currenciesIso3": "Array" }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/billingInfo/{token}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Read the billing information (company name, address, phone, vat ID)",
                "operationId": "Billing-Info",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": "dec1tokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The current billing info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "billingEmail": "String",
                                    "preferredCurrency": "String",
                                    "customerName": "String",
                                    "customerPhone": "String",
                                    "addressLine1": "String",
                                    "addressLine2": "String",
                                    "addressCity": "String",
                                    "addressPostalCode": "String",
                                    "addressState": "String",
                                    "addressCountry": "String",
                                    "vatID": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/updateBillingInfo/{token}": {
            "post": {
                "tags": ["Admin"],
                "summary": "Sets or update the billing information (company name, address, phone, vat ID)",
                "operationId": "Update-Billing-Info",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": { "type": "string" }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "billingEmail": "String",
                                "preferredCurrency": "String",
                                "customerName": "String",
                                "customerPhone": "String",
                                "addressLine1": "String",
                                "addressLine2": "String",
                                "addressCity": "String",
                                "addressPostalCode": "String",
                                "addressState": "String",
                                "addressCountry": "String",
                                "vatID": "String"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The updated billing info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "billingEmail": "String",
                                    "preferredCurrency": "String",
                                    "customerName": "String",
                                    "customerPhone": "String",
                                    "addressLine1": "String",
                                    "addressLine2": "String",
                                    "addressCity": "String",
                                    "addressPostalCode": "String",
                                    "addressState": "String",
                                    "addressCountry": "String",
                                    "vatID": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/billingHistory/{token}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Read the history billing information (invoices paid via Stripe or manually).",
                "operationId": "Billing-History",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": "dec1tokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The billing history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "stripeInvoices": "Array",
                                    "corporateInvoices": "Array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/procureKey/{token}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Procure an API Key (sent via Email), based on an auth token. Keep your API Key secret.",
                "operationId": "Procure-Key",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": "dec1tokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An API Key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "apiKey": "String",
                                    "userId": "String",
                                    "admin": "Boolean",
                                    "vetted": "Boolean",
                                    "learnable": "Boolean",
                                    "anonymized": "Boolean",
                                    "partner": "Boolean",
                                    "striped": "Boolean",
                                    "corporate": "Boolean",
                                    "disabled": "Boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/availablePlans/{token}": {
            "get": {
                "tags": ["Admin"],
                "summary": "List all available plans in the user's preferred currency.",
                "operationId": "Available-Plans",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": "dec1tokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available plans",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "usageRatioForDupplicates": "Integer",
                                    "currencyIso3": "String",
                                    "currencySymbol": "String",
                                    "plans": "Array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/availablePlans": {
            "get": {
                "tags": ["Admin"],
                "summary": "List all available plans in the default currency (usd).",
                "operationId": "Available-Plans-USD",
                "responses": {
                    "200": {
                        "description": "Available plans",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "usageRatioForDupplicates": "Integer",
                                    "currencyIso3": "String",
                                    "currencySymbol": "String",
                                    "plans": "Array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/apiStatus": {
            "get": {
                "tags": ["Admin"],
                "summary": "Prints the current status of the classifiers.",
                "operationId": "Api-Status",
                "responses": {
                    "200": {
                        "description": "Available classifiers and status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "usageRatioForDupplicates": "Integer",
                                    "currencyIso3": "String",
                                    "currencySymbol": "String",
                                    "plans": "Array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/apiServices": {
            "get": {
                "tags": ["Admin"],
                "summary": "List of API services and usage cost in Units (default is 1=ONE Unit).",
                "operationId": "Available-Services",
                "responses": {
                    "200": {
                        "description": "Available services",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "usageRatioForDupplicates": "Integer",
                                    "currencyIso3": "String",
                                    "currencySymbol": "String",
                                    "plans": "Array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/taxonomyClasses/{classifierName}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Print the taxonomy classes valid for the given classifier.",
                "operationId": "Taxonomy-Classes",
                "parameters": [
                    {
                        "name": "classifierName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1classifierNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Available plans",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "usageRatioForDupplicates": "Integer",
                                    "currencyIso3": "String",
                                    "currencySymbol": "String",
                                    "plans": "Array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/subscribePlan/{planName}/{token}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Subscribe to a give API plan, using the user's preferred or default currency.",
                "operationId": "Subscribe-Plan",
                "parameters": [
                    {
                        "name": "planName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1planNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": "dec1tokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An API subscription",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "apiKey": "String",
                                    "planStarted": "Integer",
                                    "priorPlanStarted": "Integer",
                                    "planEnded": "Integer",
                                    "taxRate": "Number",
                                    "planName": "String",
                                    "planBaseFeesKey": "String",
                                    "planStatus": "String",
                                    "planQuota": "Integer",
                                    "priceUSD": "Number",
                                    "priceOverageUSD": "Number",
                                    "price": "Number",
                                    "priceOverage": "Number",
                                    "currency": "String",
                                    "currencyFactor": "Number",
                                    "stripeCustomerId": "String",
                                    "stripeStatus": "String",
                                    "stripeSubscription": "String",
                                    "userId": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/subscribePlanOnBehalf/{planName}/{apiKey}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Subscribe to a give API plan, using the user's preferred or default currency (admin only).",
                "operationId": "Subscribe-Plan-OnBehalf",
                "parameters": [
                    {
                        "name": "planName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1planNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "apiKey",
                        "in": "path",
                        "required": true,
                        "schema": "dec1apiKeydec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An API subscription",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "apiKey": "String",
                                    "planStarted": "Integer",
                                    "priorPlanStarted": "Integer",
                                    "planEnded": "Integer",
                                    "taxRate": "Number",
                                    "planName": "String",
                                    "planBaseFeesKey": "String",
                                    "planStatus": "String",
                                    "planQuota": "Integer",
                                    "priceUSD": "Number",
                                    "priceOverageUSD": "Number",
                                    "price": "Number",
                                    "priceOverage": "Number",
                                    "currency": "String",
                                    "currencyFactor": "Number",
                                    "stripeCustomerId": "String",
                                    "stripeStatus": "String",
                                    "stripeSubscription": "String",
                                    "userId": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/removeUserAccount/{token}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Remove the user account.",
                "operationId": "Remove-User-Account",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": "dec1tokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An API subscription",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "apiKey": "String",
                                    "planStarted": "Integer",
                                    "priorPlanStarted": "Integer",
                                    "planEnded": "Integer",
                                    "taxRate": "Number",
                                    "planName": "String",
                                    "planBaseFeesKey": "String",
                                    "planStatus": "String",
                                    "planQuota": "Integer",
                                    "priceUSD": "Number",
                                    "priceOverageUSD": "Number",
                                    "price": "Number",
                                    "priceOverage": "Number",
                                    "currency": "String",
                                    "currencyFactor": "Number",
                                    "stripeCustomerId": "String",
                                    "stripeStatus": "String",
                                    "stripeSubscription": "String",
                                    "userId": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/removeUserAccountOnBehalf/{apiKey}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Remove (on behalf) a user account.",
                "operationId": "Remove-User-Account-OnBehalf",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "path",
                        "required": true,
                        "schema": "dec1apiKeydec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An API subscription",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "apiKey": "String",
                                    "planStarted": "Integer",
                                    "priorPlanStarted": "Integer",
                                    "planEnded": "Integer",
                                    "taxRate": "Number",
                                    "planName": "String",
                                    "planBaseFeesKey": "String",
                                    "planStatus": "String",
                                    "planQuota": "Integer",
                                    "priceUSD": "Number",
                                    "priceOverageUSD": "Number",
                                    "price": "Number",
                                    "priceOverage": "Number",
                                    "currency": "String",
                                    "currencyFactor": "Number",
                                    "stripeCustomerId": "String",
                                    "stripeStatus": "String",
                                    "stripeSubscription": "String",
                                    "userId": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/updateLimit/{usageLimit}/{hardOrSoft}/{token}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Modifies the hard/soft limit on the API plan's overages (default is 0$ soft limit).",
                "operationId": "Update-Limit",
                "parameters": [
                    {
                        "name": "usageLimit",
                        "in": "path",
                        "required": true,
                        "schema": "dec1usageLimitdec2",
                        "type": "Integer"
                    },
                    {
                        "name": "hardOrSoft",
                        "in": "path",
                        "required": true,
                        "schema": "dec1hardOrSoftdec2",
                        "type": "Boolean"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": "dec1tokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An API subscription",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "overageExclTax": "Number",
                                    "overageInclTax": "Number",
                                    "overageCurrency": "String",
                                    "overageQuantity": "Integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/verifyEmail/{emailToken}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Verifies an email, based on token sent to that email",
                "operationId": "Verify-Email",
                "parameters": [
                    {
                        "name": "emailToken",
                        "in": "path",
                        "required": true,
                        "schema": "dec1emailTokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An API Key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "apiKey": "String",
                                    "userId": "String",
                                    "admin": "Boolean",
                                    "vetted": "Boolean",
                                    "learnable": "Boolean",
                                    "anonymized": "Boolean",
                                    "partner": "Boolean",
                                    "striped": "Boolean",
                                    "corporate": "Boolean",
                                    "disabled": "Boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/verifyRemoveEmail/{emailToken}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Verifies an email, based on token sent to that email",
                "operationId": "Verify-Remove-Email",
                "parameters": [
                    {
                        "name": "emailToken",
                        "in": "path",
                        "required": true,
                        "schema": "dec1emailTokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An API Key",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "apiKey": "String",
                                    "userId": "String",
                                    "admin": "Boolean",
                                    "vetted": "Boolean",
                                    "learnable": "Boolean",
                                    "anonymized": "Boolean",
                                    "partner": "Boolean",
                                    "striped": "Boolean",
                                    "corporate": "Boolean",
                                    "disabled": "Boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/stats": {
            "get": {
                "tags": ["Admin"],
                "summary": "Print basic system statistics.",
                "operationId": "Stats",
                "responses": {
                    "200": {
                        "description": "Current system status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "cacheMetrics": "Array",
                                    "classifierMetrics": "Array",
                                    "sourceMetrics": "Array",
                                    "totalMem": "Integer",
                                    "freeMem": "Integer",
                                    "maxMem": "Integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/apiUsage": {
            "get": {
                "tags": ["Admin"],
                "summary": "Print current API usage.",
                "operationId": "Api-Usage",
                "responses": {
                    "200": {
                        "description": "Print current API usage.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "overageExclTax": "Number",
                                    "overageInclTax": "Number",
                                    "overageCurrency": "String",
                                    "overageQuantity": "Integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/apiUsageHistory": {
            "get": {
                "tags": ["Admin"],
                "summary": "Print historical API usage.",
                "operationId": "Api-Usage-History",
                "responses": {
                    "200": {
                        "description": "Print historical API usage.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "overageExclTax": "Number",
                                    "overageInclTax": "Number",
                                    "overageCurrency": "String",
                                    "overageQuantity": "Integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/apiUsageHistoryAggregate": {
            "get": {
                "tags": ["Admin"],
                "summary": "Print historical API usage (in an aggregated view, by service, by day/hour/min).",
                "operationId": "Api-Usage-History-Aggregate",
                "responses": {
                    "200": {
                        "description": "Print historical API usage.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "overageExclTax": "Number",
                                    "overageInclTax": "Number",
                                    "overageCurrency": "String",
                                    "overageQuantity": "Integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/sourceStats/{source}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Print basic source statistics.",
                "operationId": "Source-Stats",
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "required": true,
                        "schema": "dec1sourcedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current system status.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "cacheMetrics": "Array",
                                    "classifierMetrics": "Array",
                                    "sourceMetrics": "Array",
                                    "totalMem": "Integer",
                                    "freeMem": "Integer",
                                    "maxMem": "Integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/addCredits/{apiKey}/{usageCredits}/{userMessage}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Add usage credits to an API Key.",
                "operationId": "Add-Credits",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "path",
                        "required": true,
                        "schema": "dec1apiKeydec2",
                        "type": "String"
                    },
                    {
                        "name": "usageCredits",
                        "in": "path",
                        "required": true,
                        "schema": "dec1usageCreditsdec2",
                        "type": "Integer"
                    },
                    {
                        "name": "userMessage",
                        "in": "path",
                        "required": true,
                        "schema": "dec1userMessagedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estimate new after applying credits.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "cacheMetrics": "Array",
                                    "classifierMetrics": "Array",
                                    "sourceMetrics": "Array",
                                    "totalMem": "Integer",
                                    "freeMem": "Integer",
                                    "maxMem": "Integer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/invalidateCache": {
            "get": {
                "tags": ["Admin"],
                "summary": "Invalidate system caches.",
                "operationId": "Invalidate-Cache",
                "responses": { "200": { "description": "Clear caches." } }
            }
        },
        "/api2/json/debugLevel/{logger}/{level}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Update debug level for a classifier",
                "operationId": "Debug-Level",
                "parameters": [
                    {
                        "name": "logger",
                        "in": "path",
                        "required": true,
                        "schema": "dec1loggerdec2",
                        "type": "String"
                    },
                    {
                        "name": "level",
                        "in": "path",
                        "required": true,
                        "schema": "dec1leveldec2",
                        "type": "String"
                    }
                ],
                "responses": {}
            }
        },
        "/api2/json/learnable/{source}/{learnable}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Activate/deactivate learning from a source.",
                "operationId": "Learnable",
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "required": true,
                        "schema": "dec1sourcedec2",
                        "type": "String"
                    },
                    {
                        "name": "learnable",
                        "in": "path",
                        "required": true,
                        "schema": "dec1learnabledec2",
                        "type": "Boolean"
                    }
                ],
                "responses": {
                    "200": { "description": "Vetting of a source." }
                }
            }
        },
        "/api2/json/anonymize/{source}/{anonymized}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Activate/deactivate anonymization for a source.",
                "operationId": "Anonymize",
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "required": true,
                        "schema": "dec1sourcedec2",
                        "type": "String"
                    },
                    {
                        "name": "anonymized",
                        "in": "path",
                        "required": true,
                        "schema": "dec1anonymizeddec2",
                        "type": "Boolean"
                    }
                ],
                "responses": {
                    "200": { "description": "Anonymization of a source." }
                }
            }
        },
        "/api2/json/vetting/{source}/{vetted}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Vetting of a source.",
                "operationId": "Vet",
                "parameters": [
                    {
                        "name": "source",
                        "in": "path",
                        "required": true,
                        "schema": "dec1sourcedec2",
                        "type": "String"
                    },
                    {
                        "name": "vetted",
                        "in": "path",
                        "required": true,
                        "schema": "dec1vetteddec2",
                        "type": "Boolean"
                    }
                ],
                "responses": {
                    "200": { "description": "Vetting of a source." }
                }
            }
        },
        "/api2/json/corporateKey/{apiKey}/{corporate}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Setting an API Key to a corporate status.",
                "operationId": "Corporate-Key",
                "parameters": [
                    {
                        "name": "apiKey",
                        "in": "path",
                        "required": true,
                        "schema": "dec1apiKeydec2",
                        "type": "String"
                    },
                    {
                        "name": "corporate",
                        "in": "path",
                        "required": true,
                        "schema": "dec1corporatedec2",
                        "type": "Boolean"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API Key set to a corporate status."
                    }
                }
            }
        },
        "/api2/json/nameTypeGeo/{properNoun}/{countryIso2}": {
            "get": {
                "tags": ["General"],
                "summary": "Infer the likely type of a proper noun (personal name, brand name, place name etc.)",
                "operationId": "Name-Type-Geo",
                "parameters": [
                    {
                        "name": "properNoun",
                        "in": "path",
                        "required": true,
                        "schema": "dec1properNoundec2",
                        "type": "String"
                    },
                    {
                        "name": "countryIso2",
                        "in": "path",
                        "required": true,
                        "schema": "dec1countryIso2dec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A typed name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "commonType": "String",
                                    "commonTypeAlt": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/nameTypeBatch": {
            "post": {
                "tags": ["General"],
                "summary": "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.)",
                "operationId": "Name-Type-Batch",
                "requestBody": {
                    "description": "A list of proper names",
                    "content": {
                        "application/json": {
                            "schema": [{ "id": "String", "name": "String" }]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of commonTypeized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "commonType": "String",
                                        "commonTypeAlt": "String",
                                        "score": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/nameTypeGeoBatch": {
            "post": {
                "tags": ["General"],
                "summary": "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.)",
                "operationId": "Name-Type-Geo-Batch",
                "requestBody": {
                    "description": "A list of proper names",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "name": "String",
                                    "countryIso2": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of commonTypeized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "commonType": "String",
                                        "commonTypeAlt": "String",
                                        "score": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/corridor/{countryIso2From}/{firstNameFrom}/{lastNameFrom}/{countryIso2To}/{firstNameTo}/{lastNameTo}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com)",
                "operationId": "Corridor",
                "parameters": [
                    {
                        "name": "countryIso2From",
                        "in": "path",
                        "required": true,
                        "schema": "dec1countryIso2Fromdec2",
                        "type": "String"
                    },
                    {
                        "name": "firstNameFrom",
                        "in": "path",
                        "required": true,
                        "schema": "dec1firstNameFromdec2",
                        "type": "String"
                    },
                    {
                        "name": "lastNameFrom",
                        "in": "path",
                        "required": true,
                        "schema": "dec1lastNameFromdec2",
                        "type": "String"
                    },
                    {
                        "name": "countryIso2To",
                        "in": "path",
                        "required": true,
                        "schema": "dec1countryIso2Todec2",
                        "type": "String"
                    },
                    {
                        "name": "firstNameTo",
                        "in": "path",
                        "required": true,
                        "schema": "dec1firstNameTodec2",
                        "type": "String"
                    },
                    {
                        "name": "lastNameTo",
                        "in": "path",
                        "required": true,
                        "schema": "dec1lastNameTodec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Two classified names.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "id": "String",
                                    "script": "String",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/corridorBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com)",
                "operationId": "Corridor-Batch",
                "requestBody": {
                    "description": "A list of name pairs, with country code (nameFrom -> nameTo).",
                    "content": {
                        "application/json": { "schema": [{ "id": "String" }] }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of classified name pairs.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "id": "String",
                                        "script": "String",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/gender/{firstName}/{lastName}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer the likely gender of a name.",
                "operationId": "Gender",
                "parameters": [
                    {
                        "name": "firstName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1firstNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "lastName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1lastNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A genderized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "likelyGender": "String",
                                    "genderScale": "Number",
                                    "score": "Number",
                                    "probabilityCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderGeo/{firstName}/{lastName}/{countryIso2}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer the likely gender of a name, given a local context (ISO2 country code).",
                "operationId": "Gender-Geo",
                "parameters": [
                    {
                        "name": "firstName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1firstNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "lastName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1lastNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "countryIso2",
                        "in": "path",
                        "required": true,
                        "schema": "dec1countryIso2dec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A genderized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "likelyGender": "String",
                                    "genderScale": "Number",
                                    "score": "Number",
                                    "probabilityCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderGeoBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code).",
                "operationId": "Gender-Geo-Batch",
                "requestBody": {
                    "description": "A list of names, with country code.",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "countryIso2": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "likelyGender": "String",
                                        "genderScale": "Number",
                                        "score": "Number",
                                        "probabilityCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer the likely gender of up to 100 names, detecting automatically the cultural context.",
                "operationId": "Gender-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "likelyGender": "String",
                                        "genderScale": "Number",
                                        "score": "Number",
                                        "probabilityCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/parsedGenderBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer the likely gender of up to 100 fully parsed names, detecting automatically the cultural context.",
                "operationId": "Parsed-Gender-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "prefixOrTitle": "String",
                                    "suffix": "String",
                                    "middleName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "likelyGender": "String",
                                        "genderScale": "Number",
                                        "score": "Number",
                                        "probabilityCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/parsedGenderGeoBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer the likely gender of up to 100 fully parsed names, detecting automatically the cultural context.",
                "operationId": "Parsed-Gender-Geo-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "prefixOrTitle": "String",
                                    "suffix": "String",
                                    "middleName": "String",
                                    "countryIso2": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "likelyGender": "String",
                                        "genderScale": "Number",
                                        "score": "Number",
                                        "probabilityCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderFullGeo/{fullName}/{countryIso2}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer the likely gender of a full name, given a local context (ISO2 country code).",
                "operationId": "Gender-Full-Geo",
                "parameters": [
                    {
                        "name": "fullName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1fullNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "countryIso2",
                        "in": "path",
                        "required": true,
                        "schema": "dec1countryIso2dec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A genderized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "likelyGender": "String",
                                    "genderScale": "Number",
                                    "score": "Number",
                                    "probabilityCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderFull/{fullName}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer the likely gender of a full name, ex. John H. Smith",
                "operationId": "Gender-Full",
                "parameters": [
                    {
                        "name": "fullName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1fullNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A genderized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "likelyGender": "String",
                                    "genderScale": "Number",
                                    "score": "Number",
                                    "probabilityCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderFullBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer the likely gender of up to 100 full names, detecting automatically the cultural context.",
                "operationId": "Gender-Full-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [{ "id": "String", "name": "String" }]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "likelyGender": "String",
                                        "genderScale": "Number",
                                        "score": "Number",
                                        "probabilityCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderFullGeoBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code).",
                "operationId": "Gender-Full-Geo-Batch",
                "requestBody": {
                    "description": "A list of personal names, with a country ISO2 code",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "name": "String",
                                    "countryIso2": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "likelyGender": "String",
                                        "genderScale": "Number",
                                        "score": "Number",
                                        "probabilityCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/originBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer the likely country of origin of up to 100 names, detecting automatically the cultural context.",
                "operationId": "Origin-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "countryOrigin": "String",
                                        "countryOriginAlt": "String",
                                        "countriesOriginTop": "Array",
                                        "score": "Number",
                                        "regionOrigin": "String",
                                        "topRegionOrigin": "String",
                                        "subRegionOrigin": "String",
                                        "probabilityCalibrated": "Number",
                                        "probabilityAltCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/countryBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin.",
                "operationId": "Country-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [{ "id": "String", "name": "String" }]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "score": "Number",
                                        "country": "String",
                                        "countryAlt": "String",
                                        "region": "String",
                                        "topRegion": "String",
                                        "subRegion": "String",
                                        "countriesTop": "Array",
                                        "probabilityCalibrated": "Number",
                                        "probabilityAltCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/usRaceEthnicity/{firstName}/{lastName}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander).",
                "operationId": "US-Race-and-Ethnicity",
                "parameters": [
                    {
                        "name": "firstName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1firstNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "lastName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1lastNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a US resident's likely race/ethnicity : W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*). *optionally",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "raceEthnicityAlt": "String",
                                    "raceEthnicity": "String",
                                    "score": "Number",
                                    "raceEthnicitiesTop": "Array",
                                    "probabilityCalibrated": "Number",
                                    "probabilityAltCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/usRaceEthnicityZIP5/{firstName}/{lastName}/{zip5Code}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander).",
                "operationId": "US-ZIP-Race-and-Ethnicity",
                "parameters": [
                    {
                        "name": "firstName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1firstNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "lastName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1lastNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "zip5Code",
                        "in": "path",
                        "required": true,
                        "schema": "dec1zip5Codedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "a US resident's likely race/ethnicity : W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*). *optionally",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "raceEthnicityAlt": "String",
                                    "raceEthnicity": "String",
                                    "score": "Number",
                                    "raceEthnicitiesTop": "Array",
                                    "probabilityCalibrated": "Number",
                                    "probabilityAltCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/usRaceEthnicityBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander).",
                "operationId": "US-Race-and-Ethnicity-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "countryIso2": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of US resident's likely race/ethnicity. W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*). *optionally",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "raceEthnicityAlt": "String",
                                        "raceEthnicity": "String",
                                        "score": "Number",
                                        "raceEthnicitiesTop": "Array",
                                        "probabilityCalibrated": "Number",
                                        "probabilityAltCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/usZipRaceEthnicityBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander).",
                "operationId": "US-ZIP-Race-and-Ethnicity-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "countryIso2": "String",
                                    "zipCode": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of US resident's likely race/ethnicity. W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*). *optionally",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "raceEthnicityAlt": "String",
                                        "raceEthnicity": "String",
                                        "score": "Number",
                                        "raceEthnicitiesTop": "Array",
                                        "probabilityCalibrated": "Number",
                                        "probabilityAltCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/diaspora/{countryIso2}/{firstName}/{lastName}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.)",
                "operationId": "Diaspora",
                "parameters": [
                    {
                        "name": "countryIso2",
                        "in": "path",
                        "required": true,
                        "schema": "dec1countryIso2dec2",
                        "type": "String"
                    },
                    {
                        "name": "firstName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1firstNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "lastName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1lastNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A diaspora / ethnicity for given name and geography.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "score": "Number",
                                    "ethnicityAlt": "String",
                                    "ethnicity": "String",
                                    "lifted": "Boolean",
                                    "countryIso2": "String",
                                    "ethnicitiesTop": "Array",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/diasporaBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.)",
                "operationId": "Diaspora-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "countryIso2": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of diaspora / ethnicity given a name and residency.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "score": "Number",
                                        "ethnicityAlt": "String",
                                        "ethnicity": "String",
                                        "lifted": "Boolean",
                                        "countryIso2": "String",
                                        "ethnicitiesTop": "Array",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/parseName/{nameFull}/{countryIso2}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context.",
                "operationId": "Parse-Name-Geo",
                "parameters": [
                    {
                        "name": "nameFull",
                        "in": "path",
                        "required": true,
                        "schema": "dec1nameFulldec2",
                        "type": "String"
                    },
                    {
                        "name": "countryIso2",
                        "in": "path",
                        "required": true,
                        "schema": "dec1countryIso2dec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A origined name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "nameParserType": "String",
                                    "nameParserTypeAlt": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/parseNameBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John.",
                "operationId": "Parse-Name-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [{ "id": "String", "name": "String" }]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of parsed names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "nameParserType": "String",
                                        "nameParserTypeAlt": "String",
                                        "score": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/parseNameGeoBatch": {
            "post": {
                "tags": ["Personal"],
                "summary": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision. ",
                "operationId": "Parse-Name-Geo-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "name": "String",
                                    "countryIso2": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of parsed names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "nameParserType": "String",
                                        "nameParserTypeAlt": "String",
                                        "score": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/parseChineseName/{chineseName}": {
            "get": {
                "tags": ["Chinese"],
                "summary": "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name)",
                "operationId": "Parse-Chinese-Name",
                "parameters": [
                    {
                        "name": "chineseName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A origined name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "nameParserType": "String",
                                    "nameParserTypeAlt": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/parseChineseNameBatch": {
            "post": {
                "tags": ["Chinese"],
                "summary": "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name).",
                "operationId": "Parse-Chinese-Name-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [{ "id": "String", "name": "String" }]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of parsed names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "nameParserType": "String",
                                        "nameParserTypeAlt": "String",
                                        "score": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/pinyinChineseName/{chineseName}": {
            "get": {
                "tags": ["Chinese"],
                "summary": "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name)",
                "operationId": "Pinyin-Chinese-Name",
                "parameters": [
                    {
                        "name": "chineseName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A pinyin name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "nameParserType": "String",
                                    "nameParserTypeAlt": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/pinyinChineseNameBatch": {
            "post": {
                "tags": ["Chinese"],
                "summary": "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name).",
                "operationId": "Pinyin-Chinese-Name-Batch",
                "requestBody": {
                    "description": "A list of Chinese names",
                    "content": {
                        "application/json": {
                            "schema": [{ "id": "String", "name": "String" }]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of Pinyin names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "nameParserType": "String",
                                        "nameParserTypeAlt": "String",
                                        "score": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/chineseNameMatch/{chineseSurnameLatin}/{chineseGivenNameLatin}/{chineseName}": {
            "get": {
                "tags": ["Chinese"],
                "summary": "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming",
                "operationId": "Chinese-Name-Match",
                "parameters": [
                    {
                        "name": "chineseSurnameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseSurnameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "chineseGivenNameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseGivenNameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "chineseName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A romanized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "latinName": "String",
                                    "originalName": "String",
                                    "sourceLanguage": "String",
                                    "targetLanguage": "String",
                                    "sourceScript": "String",
                                    "targetScript": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/chineseNameMatchBatch": {
            "post": {
                "tags": ["Chinese"],
                "summary": "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming",
                "operationId": "Chinese-Name-Match-Batch",
                "requestBody": {
                    "description": "A list of personal Chinese names in LATIN, firstName = chineseGivenName; lastName=chineseSurname",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "orderOption": "String",
                                        "matchCandidates": "Array",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderChineseNamePinyin/{chineseSurnameLatin}/{chineseGivenNameLatin}": {
            "get": {
                "tags": ["Chinese"],
                "summary": "Infer the likely gender of a Chinese name in LATIN (Pinyin).",
                "operationId": "Gender-Chinese-Name-Pinyin",
                "parameters": [
                    {
                        "name": "chineseSurnameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseSurnameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "chineseGivenNameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseGivenNameLatindec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A genderized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "likelyGender": "String",
                                    "genderScale": "Number",
                                    "score": "Number",
                                    "probabilityCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderChineseNamePinyinBatch": {
            "post": {
                "tags": ["Chinese"],
                "summary": "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin).",
                "operationId": "Gender-Chinese-Name-Pinyin-Batch",
                "requestBody": {
                    "description": "A list of names, with country code.",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "likelyGender": "String",
                                        "genderScale": "Number",
                                        "score": "Number",
                                        "probabilityCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderChineseName/{chineseName}": {
            "get": {
                "tags": ["Chinese"],
                "summary": "Infer the likely gender of a Chinese full name ex. 王晓明",
                "operationId": "Gender-Chinese-Name",
                "parameters": [
                    {
                        "name": "chineseName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A genderized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "likelyGender": "String",
                                    "genderScale": "Number",
                                    "score": "Number",
                                    "probabilityCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderChineseNameBatch": {
            "post": {
                "tags": ["Chinese"],
                "summary": "Infer the likely gender of up to 100 full names ex. 王晓明",
                "operationId": "Gender-Chinese-Name-Batch",
                "requestBody": {
                    "description": "A list of personal names, with a country ISO2 code",
                    "content": {
                        "application/json": {
                            "schema": [{ "id": "String", "name": "String" }]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "likelyGender": "String",
                                        "genderScale": "Number",
                                        "score": "Number",
                                        "probabilityCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}": {
            "get": {
                "tags": ["Chinese"],
                "summary": "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming",
                "operationId": "Chinese-Name-Candidates",
                "parameters": [
                    {
                        "name": "chineseSurnameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseSurnameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "chineseGivenNameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseGivenNameLatindec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A romanized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "latinName": "String",
                                    "originalName": "String",
                                    "sourceLanguage": "String",
                                    "targetLanguage": "String",
                                    "sourceScript": "String",
                                    "targetScript": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/chineseNameCandidatesBatch": {
            "post": {
                "tags": ["Chinese"],
                "summary": "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming",
                "operationId": "Chinese-Name-Candidates-Batch",
                "requestBody": {
                    "description": "A list of personal Chinese names in LATIN, firstName = chineseGivenName; lastName=chineseSurname",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "orderOption": "String",
                                        "matchCandidates": "Array",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}": {
            "get": {
                "tags": ["Chinese"],
                "summary": "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female')",
                "operationId": "Chinese-Name-Gender-Candidates",
                "parameters": [
                    {
                        "name": "chineseSurnameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseSurnameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "chineseGivenNameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1chineseGivenNameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "knownGender",
                        "in": "path",
                        "required": true,
                        "schema": "dec1knownGenderdec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A romanized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "latinName": "String",
                                    "originalName": "String",
                                    "sourceLanguage": "String",
                                    "targetLanguage": "String",
                                    "sourceScript": "String",
                                    "targetScript": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/chineseNameCandidatesGenderBatch": {
            "post": {
                "tags": ["Chinese"],
                "summary": "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming.",
                "operationId": "Chinese-Name-Candidates-Gender-Batch",
                "requestBody": {
                    "description": "A list of personal Chinese names in LATIN, firstName = chineseGivenName; lastName=chineseSurname",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "orderOption": "String",
                                        "matchCandidates": "Array",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/parseJapaneseName/{japaneseName}": {
            "get": {
                "tags": ["Japanese"],
                "summary": "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae",
                "operationId": "Parse-Japanese-Name",
                "parameters": [
                    {
                        "name": "japaneseName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A origined name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "nameParserType": "String",
                                    "nameParserTypeAlt": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/parseJapaneseNameBatch": {
            "post": {
                "tags": ["Japanese"],
                "summary": "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae ",
                "operationId": "Parse-Japanese-Name-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [{ "id": "String", "name": "String" }]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of parsed names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "nameParserType": "String",
                                        "nameParserTypeAlt": "String",
                                        "score": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{knownGender}": {
            "get": {
                "tags": ["Japanese"],
                "summary": "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender.",
                "operationId": "Japanese-Name-Kanji-Candidates",
                "parameters": [
                    {
                        "name": "japaneseSurnameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseSurnameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "japaneseGivenNameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseGivenNameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "knownGender",
                        "in": "path",
                        "required": true,
                        "schema": "dec1knownGenderdec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A romanized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "latinName": "String",
                                    "originalName": "String",
                                    "sourceLanguage": "String",
                                    "targetLanguage": "String",
                                    "sourceScript": "String",
                                    "targetScript": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}": {
            "get": {
                "tags": ["Japanese"],
                "summary": "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae",
                "operationId": "Japanese-Name-Nogender-Kanji-Candidates",
                "parameters": [
                    {
                        "name": "japaneseSurnameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseSurnameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "japaneseGivenNameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseGivenNameLatindec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A romanized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "latinName": "String",
                                    "originalName": "String",
                                    "sourceLanguage": "String",
                                    "targetLanguage": "String",
                                    "sourceScript": "String",
                                    "targetScript": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/japaneseNameLatinCandidates/{japaneseSurnameKanji}/{japaneseGivenNameKanji}": {
            "get": {
                "tags": ["Japanese"],
                "summary": "Romanize japanese name, based on the name in Kanji.",
                "operationId": "Japanese-Name-Latin-Candidates",
                "parameters": [
                    {
                        "name": "japaneseSurnameKanji",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseSurnameKanjidec2",
                        "type": "String"
                    },
                    {
                        "name": "japaneseGivenNameKanji",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseGivenNameKanjidec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A romanized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "latinName": "String",
                                    "originalName": "String",
                                    "sourceLanguage": "String",
                                    "targetLanguage": "String",
                                    "sourceScript": "String",
                                    "targetScript": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/japaneseNameKanjiCandidatesBatch": {
            "post": {
                "tags": ["Japanese"],
                "summary": "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae",
                "operationId": "Japanese-Name-Kanji-Candidates-Batch",
                "requestBody": {
                    "description": "A list of personal japanese names in LATIN, firstName = japaneseGivenName; lastName=japaneseSurname",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "orderOption": "String",
                                        "matchCandidates": "Array",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/japaneseNameGenderKanjiCandidatesBatch": {
            "post": {
                "tags": ["Japanese"],
                "summary": "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae",
                "operationId": "Japanese-Name-Gender-Kanji-Candidates-Batch",
                "requestBody": {
                    "description": "A list of personal japanese names in LATIN, firstName = japaneseGivenName; lastName=japaneseSurname and known gender",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "orderOption": "String",
                                        "matchCandidates": "Array",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/japaneseNameLatinCandidatesBatch": {
            "post": {
                "tags": ["Japanese"],
                "summary": "Romanize japanese names, based on the name in KANJI",
                "operationId": "Japanese-Name-Latin-Candidates-Batch",
                "requestBody": {
                    "description": "A list of personal japanese names in KANJI, firstName = japaneseGivenName; lastName=japaneseSurname",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "orderOption": "String",
                                        "matchCandidates": "Array",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/japaneseNameMatch/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}": {
            "get": {
                "tags": ["Japanese"],
                "summary": "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae",
                "operationId": "Japanese-Name-Match",
                "parameters": [
                    {
                        "name": "japaneseSurnameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseSurnameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "japaneseGivenNameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseGivenNameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "japaneseName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A romanized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "latinName": "String",
                                    "originalName": "String",
                                    "sourceLanguage": "String",
                                    "targetLanguage": "String",
                                    "sourceScript": "String",
                                    "targetScript": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/japaneseNameMatchFeedbackLoop/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}": {
            "get": {
                "tags": ["Japanese"],
                "summary": "Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae",
                "operationId": "Japanese-Name-Match-Feedback-Loop",
                "parameters": [
                    {
                        "name": "japaneseSurnameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseSurnameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "japaneseGivenNameLatin",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseGivenNameLatindec2",
                        "type": "String"
                    },
                    {
                        "name": "japaneseName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A romanized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "latinName": "String",
                                    "originalName": "String",
                                    "sourceLanguage": "String",
                                    "targetLanguage": "String",
                                    "sourceScript": "String",
                                    "targetScript": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/japaneseNameMatchBatch": {
            "post": {
                "tags": ["Japanese"],
                "summary": "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae",
                "operationId": "Japanese-Name-Match-Batch",
                "requestBody": {
                    "description": "A list of personal Japanese names in LATIN, firstName = japaneseGivenName; lastName=japaneseSurname",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of matched names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "orderOption": "String",
                                        "matchCandidates": "Array",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderJapaneseName/{japaneseSurname}/{japaneseGivenName}": {
            "get": {
                "tags": ["Japanese"],
                "summary": "Infer the likely gender of a Japanese name in LATIN (Pinyin).",
                "operationId": "Gender-Japanese-Name-Pinyin",
                "parameters": [
                    {
                        "name": "japaneseSurname",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseSurnamedec2",
                        "type": "String"
                    },
                    {
                        "name": "japaneseGivenName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseGivenNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A genderized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "likelyGender": "String",
                                    "genderScale": "Number",
                                    "score": "Number",
                                    "probabilityCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderJapaneseNameBatch": {
            "post": {
                "tags": ["Japanese"],
                "summary": "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin).",
                "operationId": "Gender-Japanese-Name-Pinyin-Batch",
                "requestBody": {
                    "description": "A list of names, with country code.",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "likelyGender": "String",
                                        "genderScale": "Number",
                                        "score": "Number",
                                        "probabilityCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderJapaneseNameFull/{japaneseName}": {
            "get": {
                "tags": ["Japanese"],
                "summary": "Infer the likely gender of a Japanese full name ex. 王晓明",
                "operationId": "Gender-Japanese-Name-Full",
                "parameters": [
                    {
                        "name": "japaneseName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1japaneseNamedec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A genderized name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "likelyGender": "String",
                                    "genderScale": "Number",
                                    "score": "Number",
                                    "probabilityCalibrated": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/genderJapaneseNameFullBatch": {
            "post": {
                "tags": ["Japanese"],
                "summary": "Infer the likely gender of up to 100 full names",
                "operationId": "Gender-Japanese-Name-Full-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [{ "id": "String", "name": "String" }]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "name": "String",
                                        "likelyGender": "String",
                                        "genderScale": "Number",
                                        "score": "Number",
                                        "probabilityCalibrated": "Number",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/phoneCode/{firstName}/{lastName}/{phoneNumber}": {
            "get": {
                "tags": ["Social"],
                "summary": "Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number.",
                "operationId": "Phone-Code",
                "parameters": [
                    {
                        "name": "firstName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1firstNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "lastName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1lastNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "phoneNumber",
                        "in": "path",
                        "required": true,
                        "schema": "dec1phoneNumberdec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A name with country and phone code.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "internationalPhoneNumberVerified": "String",
                                    "phoneCountryIso2Verified": "String",
                                    "phoneCountryCode": "Integer",
                                    "phoneCountryCodeAlt": "Integer",
                                    "phoneCountryIso2": "String",
                                    "phoneCountryIso2Alt": "String",
                                    "originCountryIso2": "String",
                                    "originCountryIso2Alt": "String",
                                    "phoneNumber": "String",
                                    "verified": "Boolean",
                                    "score": "Number",
                                    "countryIso2": "String",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/phoneCodeGeo/{firstName}/{lastName}/{phoneNumber}/{countryIso2}": {
            "get": {
                "tags": ["Social"],
                "summary": "Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence).",
                "operationId": "Phone-Code-Geo",
                "parameters": [
                    {
                        "name": "firstName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1firstNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "lastName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1lastNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "phoneNumber",
                        "in": "path",
                        "required": true,
                        "schema": "dec1phoneNumberdec2",
                        "type": "String"
                    },
                    {
                        "name": "countryIso2",
                        "in": "path",
                        "required": true,
                        "schema": "dec1countryIso2dec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A name with country and phone code.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "internationalPhoneNumberVerified": "String",
                                    "phoneCountryIso2Verified": "String",
                                    "phoneCountryCode": "Integer",
                                    "phoneCountryCodeAlt": "Integer",
                                    "phoneCountryIso2": "String",
                                    "phoneCountryIso2Alt": "String",
                                    "originCountryIso2": "String",
                                    "originCountryIso2Alt": "String",
                                    "phoneNumber": "String",
                                    "verified": "Boolean",
                                    "score": "Number",
                                    "countryIso2": "String",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/phoneCodeGeoFeedbackLoop/{firstName}/{lastName}/{phoneNumber}/{phoneNumberE164}/{countryIso2}": {
            "get": {
                "tags": ["Social"],
                "summary": "Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence).",
                "operationId": "Phone-Code-Geo-Feedback-Loop",
                "parameters": [
                    {
                        "name": "firstName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1firstNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "lastName",
                        "in": "path",
                        "required": true,
                        "schema": "dec1lastNamedec2",
                        "type": "String"
                    },
                    {
                        "name": "phoneNumber",
                        "in": "path",
                        "required": true,
                        "schema": "dec1phoneNumberdec2",
                        "type": "String"
                    },
                    {
                        "name": "phoneNumberE164",
                        "in": "path",
                        "required": true,
                        "schema": "dec1phoneNumberE164dec2",
                        "type": "String"
                    },
                    {
                        "name": "countryIso2",
                        "in": "path",
                        "required": true,
                        "schema": "dec1countryIso2dec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A name with country and phone code.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "internationalPhoneNumberVerified": "String",
                                    "phoneCountryIso2Verified": "String",
                                    "phoneCountryCode": "Integer",
                                    "phoneCountryCodeAlt": "Integer",
                                    "phoneCountryIso2": "String",
                                    "phoneCountryIso2Alt": "String",
                                    "originCountryIso2": "String",
                                    "originCountryIso2Alt": "String",
                                    "phoneNumber": "String",
                                    "verified": "Boolean",
                                    "score": "Number",
                                    "countryIso2": "String",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/phoneCodeBatch": {
            "post": {
                "tags": ["Social"],
                "summary": "Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number.",
                "operationId": "Phone-Code-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "phoneNumber": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "internationalPhoneNumberVerified": "String",
                                        "phoneCountryIso2Verified": "String",
                                        "phoneCountryCode": "Integer",
                                        "phoneCountryCodeAlt": "Integer",
                                        "phoneCountryIso2": "String",
                                        "phoneCountryIso2Alt": "String",
                                        "originCountryIso2": "String",
                                        "originCountryIso2Alt": "String",
                                        "phoneNumber": "String",
                                        "verified": "Boolean",
                                        "score": "Number",
                                        "countryIso2": "String",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/phoneCodeGeoBatch": {
            "post": {
                "tags": ["Social"],
                "summary": "Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence).",
                "operationId": "Phone-Code-Geo-Batch",
                "requestBody": {
                    "description": "A list of personal names",
                    "content": {
                        "application/json": {
                            "schema": [
                                {
                                    "id": "String",
                                    "firstName": "String",
                                    "lastName": "String",
                                    "phoneNumber": "String",
                                    "countryIso2": "String",
                                    "countryIso2Alt": "String"
                                }
                            ]
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A list of genderized names.",
                        "content": {
                            "application/json": {
                                "schema": [
                                    {
                                        "script": "String",
                                        "id": "String",
                                        "firstName": "String",
                                        "lastName": "String",
                                        "internationalPhoneNumberVerified": "String",
                                        "phoneCountryIso2Verified": "String",
                                        "phoneCountryCode": "Integer",
                                        "phoneCountryCodeAlt": "Integer",
                                        "phoneCountryIso2": "String",
                                        "phoneCountryIso2Alt": "String",
                                        "originCountryIso2": "String",
                                        "originCountryIso2Alt": "String",
                                        "phoneNumber": "String",
                                        "verified": "Boolean",
                                        "score": "Number",
                                        "countryIso2": "String",
                                        "category": "String"
                                    }
                                ]
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/shutdown": {
            "get": {
                "tags": ["Admin"],
                "summary": "Stop learning and shutdown system.",
                "operationId": "Shutdown",
                "responses": { "200": { "description": "Shutdown AI." } }
            }
        },
        "/api2/json/flush": {
            "get": {
                "tags": ["Admin"],
                "summary": "Flush counters.",
                "operationId": "Flush",
                "responses": {
                    "200": { "description": "Flush API Key caches." }
                }
            }
        },
        "/api2/json/userInfo/{token}": {
            "get": {
                "tags": ["Admin"],
                "summary": "Get the user profile associated with the current google auth session token.",
                "operationId": "User-Info",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": "dec1tokendec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An session token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "apiKey": "String",
                                    "userId": "String",
                                    "admin": "Boolean",
                                    "vetted": "Boolean",
                                    "learnable": "Boolean",
                                    "anonymized": "Boolean",
                                    "partner": "Boolean",
                                    "striped": "Boolean",
                                    "corporate": "Boolean",
                                    "disabled": "Boolean"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api2/json/parseName/{nameFull}": {
            "get": {
                "tags": ["Personal"],
                "summary": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. ",
                "operationId": "Parse-Name",
                "parameters": [
                    {
                        "name": "nameFull",
                        "in": "path",
                        "required": true,
                        "schema": "dec1nameFulldec2",
                        "type": "String"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A origined name.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "script": "String",
                                    "id": "String",
                                    "name": "String",
                                    "nameParserType": "String",
                                    "nameParserTypeAlt": "String",
                                    "score": "Number",
                                    "category": "String"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
