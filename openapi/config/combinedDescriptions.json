{
    "/api2/json/country/{personalNameFull}": {
        "request": {
            "personalNameFull=>": "A personal full name (first name and last name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "name=>": "The provided full name",
            "score=>": "Higher implies a more reliable result, but score is not normalized. Use probabilityCalibrated if available",
            "country=>": "Most likely country of origin in ISO 3166-1 alpha-2 format",
            "countryAlt=>": "Second most likely country of origin in ISO 3166-1 alpha-2 format",
            "region=>": "Most likely region of origin",
            "topRegion?": "Most likely top region",
            "subRegion=>": "Most likely sub region of origin",
            "countriesTop=>": "Top 10 most likely countries of origin, order from most likely to least likely",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for country)",
            "probabilityAltCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for countryAlt)"
        },
        "summary?": "Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin"
    },

    "/api2/json/nameType/{properNoun}": {
        "request": {
            "properNoun*": "The name of a person, a brand or object that is spelled with a capital letter"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "commonType*": "The type of the analyzed name",
            "commonTypeAlt*": "The alternative  type of the analyzed name",
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary*": "Detect if a proper noun is a personal name or a public name"
    },

    "/api2/json/disable/{source}/{disabled}": {
        "request": {
            "source=>": "The API Key to set as enabled or disabled",
            "disabled=>": "Should the API key be set to disabled"
        },
        "response": {},
        "summary=>": "Used to enable or disable an API Key"
    },

    "/api2/json/origin/{firstName}/{lastName}": {
        "request": {
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "countryOrigin=>": "Most likely country of origin in ISO 3166-1 alpha-2 format",
            "countryOriginAlt=>": "Second most likely country of origin in ISO 3166-1 alpha-2 format",
            "countriesOriginTop*": "The codes of the 10 most likely countries of origin, in ISO 2 format",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "regionOrigin*": "The continent of the name",
            "topRegionOrigin*": "Most likely top region of Origin (based on countryOrigin ISO2 code)",
            "subRegionOrigin*": "The region of the continent",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOrigin)",
            "probabilityAltCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOriginAlt)"
        },
        "summary*": "Detect the likely country of origin of a first name and last name structure. For countries like U.S.A, Canada, Australia or New-Zealand and other melting-pots, refer to 'diaspora'"
    },

    "/api2/json/softwareVersion": {
        "request": {},
        "response": {
            "softwareNameAndVersion*": "The name of the API version",
            "softwareVersion*": "An array of the major, minor and patch version"
        },
        "summary*": "Get the current version of the Namsor software"
    },

    "/api2/json/apiStatus": {
        "request": {},
        "response": {
            "softwareVersion": {
                "softwareNameAndVersion*": "The name of the API version",
                "softwareVersion*": "An array of the major, minor and patch version"
            },
            "classifiers": {
                "classifierName*": "The classifier name",
                "serving*": "True if the classifier is serving requests (has reached minimal learning, is not shutting down)",
                "learning*": "True if the classifier is learning",
                "shuttingDown*": "True if the classifier is shutting down",
                "probabilityCalibrated*": "True if the classifier has finished the initial learning and calibrated probabilities (meanwhile, during initial learning, probabilities will be equal to -1)"
            }
        },
        "summary*": "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices. "
    },

    "/api2/json/apiServices": {
        "request": {},
        "response": {
            "serviceName*": "A service name corresponds to classifier name in apiStatus (ex. personalname_gender or personalfullname_gender)",
            "serviceGroup*": "Groups together classifiers providing a similar service (ex. gender groups personalname_gender and personalfullname_gender)",
            "costInUnits*": "The cost in units for the usage of that service"
        },
        "summary*": "Receive a list of the API services and usage costs in Units"
    },

    "/api2/json/taxonomyClasses/{classifierName}": {
        "request": {
            "classifierName=>": "Name of the classifier"
        },
        "response": {
            "classifierName=>": "Name of the submitted classifier",
            "taxonomyClasses=>": "Possible enumerators for this classifier"
        },
        "summary=>": "Returns a list of the possible enumerators for a given classifier"
    },

    "/api2/json/apiUsage": {
        "request": {},
        "response": {
            "subscription": {
                "apiKey=>": "Your Namsor API key",
                "planStarted*": "The starting date of the plan, in UNIX format",
                "priorPlanStarted*": "Datetime when the user subscribed to the prior plan",
                "planEnded*": "The ending date of the plan, in UNIX format",
                "taxRate*": "Applicable tax rate for the plan",
                "planName*": " The name of the plan",
                "planBaseFeesKey*": "Current plan key (as in Stripe product)",
                "planStatus*": "Plan status",
                "planQuota*": "The total number of units associated with this plan",
                "priceUSD*": "The price in U.S. dollars ($)",
                "priceOverageUSD*": "The overage price in U.S. dollars ($)",
                "price*": "The price in the user's preferred currency",
                "priceOverage*": "The overaged price in the user's preferred currency",
                "currency*": "The user's preferred currency",
                "currencyFactor*": "For USD, GBP, EUR - the factor is 1",
                "stripeCustomerId*": "Customer's unique Stripe identifier",
                "stripeStatus*": "Stripe status ex active",
                "stripeSubscription*": "Stripe subscription identifier",
                "userId*": "A unique user identifier"
            },
            "billingPeriod": {
                "apiKey=>": "Your Namsor API key",
                "subscriptionStarted*": "The subscription starting date, in UNIX format",
                "periodStarted*": "The subscription starting date, in UNIX format",
                "periodEnded*": "The subscription ending date, in UNIX format",
                "stripeCurrentPeriodEnd*": "Datetime when the the plan's current period endend (in Stripe). Internal and Stripe periodicity should ~coincide",
                "stripeCurrentPeriodStart*": "Datetime when the the plan's current period started (in Stripe). Internal and Stripe periodicity should ~coincide",
                "billingStatus*": "Current period billing status ex OPEN",
                "usage*": "The number of units used so far",
                "softLimit*": "Current period soft limit (reaching the limit sends an email notification)",
                "hardLimit*": "Current period hard limit (reaching the limit sends an email notification and blocks the API Key)"
            },
            "overageExclTax*": "Overage amount including any tax",
            "overageInclTax*": "Overage amount including tax (if applicable)",
            "overageCurrency*": "Currency of the overage amount",
            "overageQuantity*": "Quantity above monthly quota of the current subscritpion, in units"
        },
        "summary*": "Receive information on your subscription plan and current API usage"
    },

    "/api2/json/apiUsageHistory": {
        "request": {},
        "response": {
            "apiKey": {
                "apiKey=>": "Your Namsor API key",
                "userId*": "A unique user identifier",
                "admin*": "The API Key has admin role",
                "vetted*": "The API Key is vetted (assumed truthful) for machine learning",
                "learnable*": "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed)",
                "anonymized*": "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed)",
                "partner*": "The API Key has partner role",
                "striped*": "The API Key is associated to a valid Stripe account",
                "corporate*": "The API Key has role corporate (ex SWIFT payments instead of Stripe payments)",
                "disabled*": "The API Key is temporarily or permanently disabled"
            },
            "apiService*": "The type of service that was requested for the analysis of names",
            "createdDateTime*": "The date of the analysis, in UNIX format",
            "totalUsage*": "The total cost of the analysis in units",
            "lastFlushedDateTime*": "The flush datetime of the counter",
            "lastUsedDateTime*": "The last usage datetime of the counter",
            "serviceFeaturesUsage*": "Usage of special features, such as Chinese, Japanese"
        },
        "summary*": "Print your API usage history"
    },

    "/api2/json/apiUsageHistoryAggregate": {
        "request": {},
        "response": {
            "timeUnit*": "Time unit is DAY, WEEK or MONTH depending on prior usage",
            "periodStart*": "Start datetime of the reporting period",
            "periodEnd*": "End datetime of the reporting period",
            "totalUsage*": "Total usage in the current period",
            "historyTruncated*": "If the history was truncaded due to data limit",
            "data*": "Data points : usage per DAY, WEEK or MONTH and per apiService",
            "colHeaders*": "apiServices as column headers ",
            "rowHeaders*": "dates as row headers "
        },
        "summary*": "Print your API usage history in an aggregated view (by service, by day/hour/min)"
    },

    "/api2/json/learnable/{source}/{learnable}": {
        "request": {
            "source*": "The API Key to set as learnable/non learnable",
            "learnable*": "Should the API key be set to learnable"
        },
        "response": {},
        "summary*": "Activate/deactivate learning from a source"
    },

    "/api2/json/anonymize/{source}/{anonymized}": {
        "request": {
            "source*": "The API Key to set as anonymized/non anonymized",
            "anonymized*": "Should the API key be set to anonymized"
        },
        "response": {},
        "summary*": "Activate/deactivate anonymization for a source"
    },

    "/api2/json/nameTypeGeo/{properNoun}/{countryIso2}": {
        "request": {
            "properNoun*": "The name of a person, a brand or object that is spelled with a capital letter",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "commonType*": "The type of the name",
            "commonTypeAlt*": "The alternative type of the name",
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary*": "Detect if a proper noun is a personal name or a public name, according to its local context (ex: John Smith : personal name, Namsor: brand name)"
    },

    "/api2/json/nameTypeBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name*": "The name of a person, a brand or object that is spelled with a capital letter"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "commonType*": "The type of the analyzed name",
            "commonTypeAlt*": "The alternative  type of the analyzed name",
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary*": "Detect if proper nouns are personal names or public names (ex: John Smith : personal name, Namsor: brand name). You can inspect up to a 100 names"
    },

    "/api2/json/nameTypeGeoBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name*": "A personal name or a brand name",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "commonType*": "The type of the analyzed name",
            "commonTypeAlt*": "The alternative  type of the analyzed name",
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary*": "Detect if proper nouns are personal names or a public names, according to their local context (ex: John Smith : personal name, Namsor: brand name). You can inspect up to 100 names"
    },

    "/api2/json/corridor/{countryIso2From}/{firstNameFrom}/{lastNameFrom}/{countryIso2To}/{firstNameTo}/{lastNameTo}": {
        "request": {
            "countryIso2From*": "The ISO country code from which the interaction starts",
            "firstNameFrom*": "The first name of the person from whom the interaction starts",
            "lastNameFrom*": "The last name of the person from whom the interaction starts",
            "countryIso2To*": "The ISO country code to which the interaction goes",
            "firstNameTo*": "The first name of the person to whom the interaction goes",
            "lastNameTo*": "The last name of the person to whom the interaction goes"
        },
        "response": {
            "id=>": "Unique identifier",
            "FirstLastNameGenderedOut": {
                "script=>": "Characters set used for analysis",
                "id=>": "Unique identifier",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)",
                "likelyGender=>": "Most likely gender",
                "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
                "score=>": "Higher implies a more reliable result, but score is not normalized. Use probabilityCalibrated if available",
                "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
            },
            "FirstLastNameOriginedOut": {
                "script=>": "Characters set used for analysis",
                "id=>": "Unique identifier",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)",
                "countryOrigin=>": "Most likely country of origin in ISO 3166-1 alpha-2 format",
                "countryOriginAlt=>": "Second most likely country of origin in ISO 3166-1 alpha-2 format",
                "countriesOriginTop*": "List countries of Origin (top 10)",
                "score=>": "Higher implies a more reliable result, but score is not normalized. Use probabilityCalibrated if available",
                "regionOrigin*": "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "topRegionOrigin*": "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "subRegionOrigin*": "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOrigin)",
                "probabilityAltCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOriginAlt)"
            },
            "FirstLastNameDiasporaedOut": {
                "script=>": "Characters set used for analysis",
                "id=>": "Unique identifier",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)",
                "score=>": "Higher implies a more reliable result, but score is not normalized. Use probabilityCalibrated if available",
                "ethnicityAlt=>": "Second most likely ethnicity",
                "ethnicity=>": "Most likely ethnicity",
                "lifted*": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true",
                "countryIso2*": "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "ethnicitiesTop*": "List most likely ethnicities (top 10)"
            },
            "script=>": "Characters set used for analysis"
        },
        "summary*": "Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com)"
    },

    "/api2/json/corridorBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstLastNameGeoFrom": {
                "id=>": "Unique identifier",
                "firstName*": "The first name of the person from whom the interaction starts",
                "lastName*": "The last name of the person from whom the interaction starts",
                "countryIso2*": "The ISO country code from which the interaction starts"
            },
            "firstLastNameGeoTo": {
                "id=>": "Unique identifier",
                "firstName*": "The first name of the person to whom the interaction goes",
                "lastName*": "The last name of the person to whom the interaction goes",
                "countryIso2*": "The ISO country code to which the interaction goes"
            }
        },
        "response": {
            "id=>": "Unique identifier",
            "FirstLastNameGenderedOut": {
                "script=>": "Characters set used for analysis",
                "id=>": "Unique identifier",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)",
                "likelyGender=>": "Most likely gender",
                "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
                "score=>": "Higher implies a more reliable result, but score is not normalized. Use probabilityCalibrated if available",
                "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
            },
            "FirstLastNameOriginedOut": {
                "script=>": "Characters set used for analysis",
                "id=>": "Unique identifier",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)",
                "countryOrigin=>": "Most likely country of origin in ISO 3166-1 alpha-2 format",
                "countryOriginAlt=>": "Second most likely country of origin in ISO 3166-1 alpha-2 format",
                "countriesOriginTop*": "List countries of Origin (top 10)",
                "score=>": "Higher implies a more reliable result, but score is not normalized. Use probabilityCalibrated if available",
                "regionOrigin*": "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "topRegionOrigin*": "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "subRegionOrigin*": "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOrigin)",
                "probabilityAltCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOriginAlt)"
            },
            "FirstLastNameDiasporaedOut": {
                "script=>": "Characters set used for analysis",
                "id=>": "Unique identifier",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)",
                "score=>": "Higher implies a more reliable result, but score is not normalized. Use probabilityCalibrated if available",
                "ethnicityAlt=>": "Second most likely ethnicity",
                "ethnicity=>": "Most likely ethnicity",
                "lifted*": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true",
                "countryIso2*": "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "ethnicitiesTop*": "List most likely ethnicities (top 10)"
            },
            "script=>": "Characters set used for analysis"
        },
        "summary*": "Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com)"
    },

    "/api2/json/gender/{firstName}/{lastName}": {
        "request": {
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary*": "Find the likely gender of a first name and last name structure"
    },

    "/api2/json/genderGeo/{firstName}/{lastName}/{countryIso2}": {
        "request": {
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary*": "Find the likely gender of a first and last name structure, according to its local context"
    },

    "/api2/json/genderGeoBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary*": "Detect the likely gender of up to 100 names, according to their local context"
    },

    "/api2/json/genderBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary*": "Find the likely gender of up to 100 names"
    },

    "/api2/json/genderFullGeo/{fullName}/{countryIso2}": {
        "request": {
            "fullName=>": "Personal full name (first name and last name)",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "name*": "The name, as it was given for analysis",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary*": "Infer the likely gender of a full name, according to a local context"
    },

    "/api2/json/genderFull/{fullName}": {
        "request": {
            "fullName=>": "Personal full name (first name and last name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "name*": "The name, as it was given for analysis",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary*": "Find the likely gender of a full name"
    },

    "/api2/json/genderFullBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name=>": "Personal full name (first name and last name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary*": "Detect the likely gender of up to 100 full names"
    },

    "/api2/json/genderFullGeoBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name=>": "Personal full name (first name and last name)",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary*": "Detect the likely gender of up to 100 full names, according to their local context"
    },

    "/api2/json/originBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "countryOrigin=>": "Most likely country of origin in ISO 3166-1 alpha-2 format",
            "countryOriginAlt=>": "Second most likely country of origin in ISO 3166-1 alpha-2 format",
            "countriesOriginTop*": "The codes of the 10 most likely countries of origin, in ISO 2 format",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "regionOrigin*": "The continent of the name",
            "topRegionOrigin*": "The continent of the name",
            "subRegionOrigin*": "The region of the continent",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOrigin)",
            "probabilityAltCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOriginAlt)"
        },
        "summary*": "Detect the likely country of origin of up to 100 first and last names"
    },

    "/api2/json/countryBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name=>": "Personal full name (first name and last name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "country*": "The country code, in ISO 2 format",
            "countryAlt*": "The alternative country code, in ISO 2 format",
            "region*": "The continent of the name",
            "topRegion*": "The continent of the name",
            "subRegion*": "The region of the continent",
            "countriesTop=>": "Top 10 most likely countries of origin, order from most likely to least likely",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for country)",
            "probabilityAltCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for countryAlt)"
        },
        "summary*": "Infer the likely country of residence of up to 100 full names or last names"
    },

    "/api2/json/usRaceEthnicity/{firstName}/{lastName}": {
        "request": {
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "raceEthnicityAlt*": "The alternative most likely U.S. race or Ethnicity",
            "raceEthnicity*": "The most likely U.S. race or Ethnicity",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "raceEthnicitiesTop*": "An array of the most likely U.S. races or Ethnicities",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for raceEthnicity)",
            "probabilityAltCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for raceEthnicityAlt)"
        },
        "summary*": "Determine the most likely U.S. race or ethnicity of a U.S. resident's first and last name"
    },

    "/api2/json/usRaceEthnicityZIP5/{firstName}/{lastName}/{zip5Code}": {
        "request": {
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "zip5Code*": "A 5 digits zip code"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "raceEthnicityAlt*": "The alternative most likely U.S. race or Ethnicity",
            "raceEthnicity*": "The most likely U.S. race or Ethnicity",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "raceEthnicitiesTop*": "An array of the most likely U.S. races or Ethnicities",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for raceEthnicity)",
            "probabilityAltCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for raceEthnicityAlt)"
        },
        "summary*": "Determine the most likely U.S. race or ethnicity of a U.S. resident's first and last name, using their ZIP code"
    },

    "/api2/json/usRaceEthnicityBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "raceEthnicityAlt*": "The alternative most likely U.S. race or Ethnicity",
            "raceEthnicity*": "The most likely U.S. race or Ethnicity",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "raceEthnicitiesTop*": "An array of the most likely U.S. races or Ethnicities",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for raceEthnicity)",
            "probabilityAltCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for raceEthnicityAlt)"
        },
        "summary*": "Detect the most likely U.S. race or ethnicity of a up to 100 U.S. residents' first and last names"
    },

    "/api2/json/usZipRaceEthnicityBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format",
            "zipCode*": "A 5 digits zip code"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "raceEthnicityAlt*": "The alternative most likely U.S. race or Ethnicity",
            "raceEthnicity*": "The most likely U.S. race or Ethnicity",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "raceEthnicitiesTop*": "An array of the most likely U.S. races or Ethnicities",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for raceEthnicity)",
            "probabilityAltCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1 (for raceEthnicityAlt)"
        },
        "summary*": "Determine the most likely U.S. race or ethnicity of up to 100 U.S. residents' first and last names, using their ZIP code"
    },

    "/api2/json/diaspora/{countryIso2}/{firstName}/{lastName}": {
        "request": {
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "ethnicityAlt=>": "Second most likely ethnicity",
            "ethnicity=>": "Most likely ethnicity",
            "lifted*": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format",
            "ethnicitiesTop*": "An array of the top ten most likely ethnicities of the name"
        },
        "summary*": "Find out the likely ethnicity or diaspora of a first name and last name, according to the country of residence"
    },

    "/api2/json/diasporaBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "ethnicityAlt=>": "Second most likely ethnicity",
            "ethnicity=>": "Most likely ethnicity",
            "lifted*": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format",
            "ethnicitiesTop*": "An array of the top ten most likely ethnicities of the name"
        },
        "summary*": "Infer the likely ethnicity or diaspora of up to 100 names, according to their country of residence"
    },

    "/api2/json/parseName/{nameFull}/{countryIso2}": {
        "request": {
            "nameFull=>": "Personal full name (first name and last name)",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "name*": "The name, as it was given for analysis",
            "nameParserType?": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "nameParserTypeAlt?": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "firstLastName": {
                "script=>": "",
                "id=>": "",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)"
            },
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary*": "Split a full name into a likely first and last name structure. For better accuracy, provide a local context"
    },

    "/api2/json/parseNameBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name=>": "Personal full name (first name and last name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "nameParserType?": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "nameParserTypeAlt?": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "firstLastName": {
                "script=>": "",
                "id=>": "",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)"
            },
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary*": "Detect the likely first and last name structure of up to 100 full names"
    },

    "/api2/json/parseNameGeoBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name=>": "Personal full name (first name and last name)",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "nameParserType?": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "nameParserTypeAlt?": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "firstLastName": {
                "script=>": "",
                "id=>": "",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)"
            },
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary*": "Detect the likely first and last name structure of up to 100 full names. For better accuracy, provide a local context"
    },

    "/api2/json/parseChineseName/{chineseName}": {
        "request": {
            "chineseName=>": "Full name (family name and given name) in Standard Mandarin Chinese"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "name=>": "Submitted full name",
            "nameParserType?": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "nameParserTypeAlt?": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "firstLastName": {
                "script=>": "",
                "id=>": "",
                "firstName=>": "First name (or given name) in Standard Mandarin Chinese",
                "lastName=>": "Last name (or family name) in Standard Mandarin Chinese"
            },
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary=>": "Returns the most likely first and last name structure of a full name in Standard Mandarin Chinese."
    },

    "/api2/json/parseChineseNameBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name=>": "Full name (family name and given name) in Standard Mandarin Chinese"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name=>": "Submitted full name",
            "nameParserType?": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "nameParserTypeAlt?": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "firstLastName": {
                "script=>": "",
                "id=>": "",
                "firstName=>": "First name (or given name) in Standard Mandarin Chinese",
                "lastName=>": "Last name (or family name) in Standard Mandarin Chinese"
            },
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary=>": "Returns the most likely first and last name structure of up to 100 full names in Standard Mandarin Chinese."
    },

    "/api2/json/pinyinChineseName/{chineseName}": {
        "request": {
            "chineseName=>": "Full name (family name and given name) in Standard Mandarin Chinese"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name=>": "Submitted full name",
            "nameParserType?": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "nameParserTypeAlt?": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "firstLastName": {
                "script=>": "",
                "id=>": "",
                "firstName=>": "Most likely first name (or given name) transcription in Pinyin",
                "lastName=>": "Most likely last name (or family name) transcription in Pinyin"
            },
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary=>": "Return the most likely romanized Pinyin transcription of a full name in Standard Mandarin Chinese."
    },

    "/api2/json/pinyinChineseNameBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name=>": "Full name (family name and given name) in Standard Mandarin Chinese"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name=>": "Submitted full name",
            "nameParserType?": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "nameParserTypeAlt?": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "firstLastName": {
                "script=>": "",
                "id=>": "",
                "firstName=>": "Most likely first name (or given name) transcription in Pinyin",
                "lastName=>": "Most likely last name (or family name) transcription in Pinyin"
            },
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary=>": "Return the most likely romanized Pinyin transcription of up to 100 full names in Standard Mandarin Chinese."
    },

    "/api2/json/chineseNameMatch/{chineseSurnameLatin}/{chineseGivenNameLatin}/{chineseName}": {
        "request": {
            "chineseSurnameLatin=>": "Family name (or last name) in latin characters",
            "chineseGivenNameLatin=>": "Given name (or first name) in latin characters",
            "chineseName=>": "Full name (family name and given name) in Standard Mandarin Chinese"
        },
        "response": {
            "script=>": "",
            "id=>": "",
            "matchStatus=>": "Success status of the match",
            "score=>": "Higher implies a better match, score is not normalized"
        },
        "summary=>": "Matches a full name in Standard Mandarin Chinese against a family name and a given name in latin characters."
    },

    "/api2/json/chineseNameMatchBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name1": {
                "id=>": "Unique identifier",
                "firstName=>": "Family name (or last name) in latin characters",
                "lastName=>": "Given name (or first name) in latin characters"
            },
            "name2": {
                "id=>": "Unique identifier",
                "name=>": "Full name (family name and given name) in Standard Mandarin Chinese"
            }
        },
        "response": {
            "script=>": "",
            "id=>": "",
            "matchStatus=>": "Success status of the match",
            "score=>": "Higher implies a better match, score is not normalized"
        },
        "summary=>": "Matches up to 100 full names in Standard Mandarin Chinese against corresponding family names and given names in latin characters."
    },

    "/api2/json/genderChineseNamePinyin/{chineseSurnameLatin}/{chineseGivenNameLatin}": {
        "request": {
            "chineseSurnameLatin=>": "Family name (or last name) in Pinyin",
            "chineseGivenNameLatin=>": "Given name (or first name) in Pinyin"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary=>": "Return the most likely gender of a Chinese first name and last name in Pinyin."
    },

    "/api2/json/genderChineseNamePinyinBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName=>": "Given name (or first name) in Pinyin",
            "lastName=>": "Family name (or last name) in Pinyin"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary=>": "Return the most likely gender of up to 100 Chinese first names and last names in Pinyin."
    },

    "/api2/json/genderChineseName/{chineseName}": {
        "request": {
            "chineseName=>": "Full name (family name and given name) in Standard Mandarin Chinese"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "name=>": "Submitted full name",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary=>": "Returns the most likely gender of a full name in Standard Mandarin Chinese."
    },

    "/api2/json/genderChineseNameBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name=>": "Full name (family name and given name) in Standard Mandarin Chinese"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name=>": "Submitted full name",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary=>": "Returns the most likely gender of up to 100 full names in Standard Mandarin Chinese."
    },

    "/api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}": {
        "request": {
            "chineseSurnameLatin=>": "Family name (or last name) in Pinyin",
            "chineseGivenNameLatin=>": "Given name (or first name) in Pinyin"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "orderOption=>": "Sorting order for matchCandidates",
            "matchCandidates": {
                "candidateName=>": "Inffered transcription of the full name to Standard Mandarin Chinese",
                "probability=>": "Higher implies a more reliable result, ranges from 0 to 1",
                "predScoreGivenName=>": "Higher implies a more reliable result (for given name or first name)",
                "predScoreFamilyName=>": "Higher implies a more reliable result (for family name or last name)"
            }
        },
        "summary=>": "Returns the most likely Standard Mandarin Chinese transcriptions using a Chinese surname and given name in Pinyin."
    },

    "/api2/json/chineseNameCandidatesBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName=>": "Chinese given name (or first name) in Pinyin",
            "lastName=>": "Chinese surname (or last name) in Pinyin"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "orderOption=>": "Sorting order for matchCandidates",
            "matchCandidates": {
                "candidateName=>": "Inffered transcription of the full name to Standard Mandarin Chinese",
                "probability=>": "Higher implies a more reliable result, ranges from 0 to 1",
                "predScoreGivenName=>": "Higher implies a more reliable result (for given name or first name)",
                "predScoreFamilyName=>": "Higher implies a more reliable result (for family name or last name)"
            }
        },
        "summary=>": "Returns the most likely Standard Mandarin Chinese transcriptions using up to 100 combinations of Chinese family names and given names in Pinyin."
    },

    "/api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}": {
        "request": {
            "chineseSurnameLatin=>": "Chinese surname (or last name) in Pinyin (romanised Mandarin Chinese)",
            "chineseGivenNameLatin=>": "Chinese given name (or first name) in Pinyin (romanised Mandarin Chinese)",
            "knownGender*": "The gender of the name"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "orderOption=>": "Sorting order for matchCandidates",
            "matchCandidates": {
                "candidateName*": "The name matching candidate name",
                "probability=>": "Higher implies a more reliable result, ranges from 0 to 1",
                "predScoreGivenName=>": "Higher implies a more reliable result (for given name or first name)",
                "predScoreFamilyName=>": "Higher implies a more reliable result (for family name or last name)"
            }
        },
        "summary*": "Returns the most likely Standard Mandarin transcriptions for a romanized Chinese first name and last name, accrding to the known gender of the name"
    },

    "/api2/json/chineseNameCandidatesGenderBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName*": "A romanized Chinese first name",
            "lastName*": "A romanized Chinese last name",
            "gender*": "The gender of the name"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "orderOption=>": "Sorting order for matchCandidates",
            "matchCandidates": {
                "candidateName*": "The name matching candidate name",
                "probability=>": "Higher implies a more reliable result, ranges from 0 to 1",
                "predScoreGivenName=>": "Higher implies a more reliable result (for given name or first name)",
                "predScoreFamilyName=>": "Higher implies a more reliable result (for family name or last name)"
            }
        },
        "summary*": "Find the most likely transcriptions for a romanized Chinese first name and last name"
    },

    "/api2/json/parseJapaneseName/{japaneseName}": {
        "request": {
            "japaneseName*": "A Japanese full name in Kanji characters or Latin alphabet"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "nameParserType?": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "nameParserTypeAlt?": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "firstLastName": {
                "script=>": "",
                "id=>": "",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)"
            },
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary*": "Split a Japanese full name, in Kanji or Latin writing, into a first name and last name structure"
    },

    "/api2/json/parseJapaneseNameBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name*": "A Japanese name in Kanji characters"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "nameParserType?": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "nameParserTypeAlt?": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "firstLastName": {
                "script=>": "",
                "id=>": "",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)"
            },
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary*": "Split up to 100 Japanese full names, in Kanji or Latin writing, into first name and last name structures"
    },

    "/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{knownGender}": {
        "request": {
            "japaneseSurnameLatin*": "A romanized Japanese last name",
            "japaneseGivenNameLatin*": "A romanized Japanese first name",
            "knownGender*": "The gender of the name"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "orderOption=>": "Sorting order for matchCandidates",
            "matchCandidates": {
                "candidateName*": "The name matching candidate name",
                "probability=>": "Higher implies a more reliable result, ranges from 0 to 1",
                "predScoreGivenName=>": "Higher implies a more reliable result (for given name or first name)",
                "predScoreFamilyName=>": "Higher implies a more reliable result (for family name or last name)"
            }
        },
        "summary*": "Find the likely transcriptions to Kanji, for a Japanese first name and last name, according to a known gender"
    },

    "/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}": {
        "request": {
            "japaneseSurnameLatin*": "A romanized Japanese last name",
            "japaneseGivenNameLatin*": "A romanized Japanese first name"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "orderOption=>": "Sorting order for matchCandidates",
            "matchCandidates": {
                "candidateName*": "The name matching candidate name",
                "probability=>": "Higher implies a more reliable result, ranges from 0 to 1",
                "predScoreGivenName=>": "Higher implies a more reliable result (for given name or first name)",
                "predScoreFamilyName=>": "Higher implies a more reliable result (for family name or last name)"
            }
        },
        "summary*": "Find the likely transcriptions to Kanji, for a romanized Japanese first name and last name"
    },

    "/api2/json/japaneseNameLatinCandidates/{japaneseSurnameKanji}/{japaneseGivenNameKanji}": {
        "request": {
            "japaneseSurnameKanji*": "A Japanese last name in Kanji characters",
            "japaneseGivenNameKanji*": "A Japanese first name in Kanji characters"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "orderOption=>": "Sorting order for matchCandidates",
            "matchCandidates": {
                "candidateName*": "The name matching candidate name",
                "probability=>": "Higher implies a more reliable result, ranges from 0 to 1",
                "predScoreGivenName=>": "Higher implies a more reliable result (for given name or first name)",
                "predScoreFamilyName=>": "Higher implies a more reliable result (for family name or last name)"
            }
        },
        "summary*": "Receive the most likely Latin transcriptions for a Japanese name written in Kanji characters"
    },

    "/api2/json/japaneseNameKanjiCandidatesBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName*": "A romanized Japanese first name",
            "lastName*": "A romanized Japanese last name"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "orderOption=>": "Sorting order for matchCandidates",
            "matchCandidates": {
                "candidateName*": "The name matching candidate name",
                "probability=>": "Higher implies a more reliable result, ranges from 0 to 1",
                "predScoreGivenName=>": "Higher implies a more reliable result (for given name or first name)",
                "predScoreFamilyName=>": "Higher implies a more reliable result (for family name or last name)"
            }
        },
        "summary*": "Find the likely transcriptions to Kanji, for up to 100 Japanese romanized first and last names"
    },

    "/api2/json/japaneseNameGenderKanjiCandidatesBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName*": "A romanized Japanese first name",
            "lastName*": "A romanized Japanese last name",
            "gender*": "The gender of the name"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "orderOption=>": "Sorting order for matchCandidates",
            "matchCandidates": {
                "candidateName*": "The name matching candidate name",
                "probability=>": "Higher implies a more reliable result, ranges from 0 to 1",
                "predScoreGivenName=>": "Higher implies a more reliable result (for given name or first name)",
                "predScoreFamilyName=>": "Higher implies a more reliable result (for family name or last name)"
            }
        },
        "summary*": "Find the likely transcriptions to Kanji, for up to 100 Japanese romanized first and last names, according to a known gender"
    },

    "/api2/json/japaneseNameLatinCandidatesBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName*": "A Japanese first name in Kanji characters",
            "lastName*": "A Japanese last name in Kanji characters"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "orderOption=>": "Sorting order for matchCandidates",
            "matchCandidates": {
                "candidateName*": "The name matching candidate name",
                "probability=>": "Higher implies a more reliable result, ranges from 0 to 1",
                "predScoreGivenName=>": "Higher implies a more reliable result (for given name or first name)",
                "predScoreFamilyName=>": "Higher implies a more reliable result (for family name or last name)"
            }
        },
        "summary*": "Romanize up to 100 japanese names written in Kanji"
    },

    "/api2/json/japaneseNameMatch/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}": {
        "request": {
            "japaneseSurnameLatin*": "A romanized Japanese last name",
            "japaneseGivenNameLatin*": "A romanized Japanese first name",
            "japaneseName*": "A Japanese full name in Kanji characters"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "matchStatus=>": "Success status of the match",
            "score=>": "Higher implies a better match, score is not normalized"
        },
        "summary*": "Receive a score for matching a romanized Japanese name with a Kanji transcription"
    },

    "/api2/json/japaneseNameMatchFeedbackLoop/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}": {
        "request": {
            "japaneseSurnameLatin*": "A romanized Japanese last name",
            "japaneseGivenNameLatin*": "A romanized Japanese first name",
            "japaneseName*": "A Japanese full name in Kanji characters"
        },
        "response": {
            "feedbackCredits*": "The number of unit credited to your account"
        },
        "summary*": "Suggest a transcription of a Japanese name between Kanji characters and Latin alphabet to help us improve our name matching tool"
    },

    "/api2/json/japaneseNameMatchBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name1": {
                "id=>": "Unique identifier",
                "firstName*": "A Japanese given name (first name) in latin characters",
                "lastName*": "A Japanese surname (last name) in latin characters"
            },
            "name2": {
                "id=>": "Unique identifier",
                "name*": "A Japanese full name (surname and given name) in KANJI characters"
            }
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "matchStatus=>": "Success status of the match",
            "score=>": "Higher implies a better match, score is not normalized"
        },
        "summary*": "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae"
    },

    "/api2/json/genderJapaneseName/{japaneseSurname}/{japaneseGivenName}": {
        "request": {
            "japaneseSurname*": "A Japanese surname (last name) in latin characters",
            "japaneseGivenName*": "A Japanese given name (first name) in latin characters"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary*": "Discover the likely gender of a Japanese first name and last name written in Latin alphabet"
    },

    "/api2/json/genderJapaneseNameBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName*": "A romanized Japanese first name",
            "lastName*": "A romanized Japanese last name"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary*": "Discover the likely gender of a up to 100 Japanese first and last names written in Latin alphabet"
    },

    "/api2/json/genderJapaneseNameFull/{japaneseName}": {
        "request": {
            "japaneseName*": "A Japanese full name (surname and given name) in Kanji"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "name*": "The name, as it was given for analysis",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary=>": "Find the likely gender of a Japanese full name (surname and given name), written in Kanji characters."
    },

    "/api2/json/genderJapaneseNameFullBatch": {
        "request": {
            "id=>": "Unique identifier",
            "name*": "A Japanese full name (surname and given name) in Kanji"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "likelyGender=>": "Most likely gender",
            "genderScale=>": "NamSor_v1 gender scale ranging from -1 (male) to +1 (female)",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "probabilityCalibrated=>": "Higher implies a more reliable result, ranges from 0 to 1"
        },
        "summary=>": "Find the likely gender of up to 100 Japanese full names (surnames and given names), written in Kanji characters."
    },

    "/api2/json/phoneCode/{firstName}/{lastName}/{phoneNumber}": {
        "request": {
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "phoneNumber=>": "A formatted or unformatted phone number"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "internationalPhoneNumberVerified*": "The formatted phone number for international calls",
            "phoneCountryIso2Verified?": "The country code of the phone number in ISO 3166-1 alpha-2 format",
            "phoneCountryCode*": "The phone prefix of the number",
            "phoneCountryCodeAlt*": "The alternative phone prefix of the number",
            "phoneCountryIso2=>": "Most likely country of origin of the phone number in ISO 3166-1 alpha-2 format",
            "phoneCountryIso2Alt=>": "Second most likely country of origin of the phone number in ISO 3166-1 alpha-2 format",
            "originCountryIso2=>": "Most likely country of origin of the name in ISO 3166-1 alpha-2 format",
            "originCountryIso2Alt=>": "Second most likely country of origin of the name in ISO 3166-1 alpha-2 format",
            "phoneNumber=>": "Submitted phone number",
            "verified*": "Indicates if the phone number could be positively verified using libphonenumber",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "summary=>": "Using a name and phone number infer the most likely phone prefix and country of origin"
    },

    "/api2/json/phoneCodeGeo/{firstName}/{lastName}/{phoneNumber}/{countryIso2}": {
        "request": {
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "phoneNumber=>": "A formatted or unformatted phone number",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "Submitted first name",
            "lastName=>": "Submitted last name",
            "internationalPhoneNumberVerified*": "The formatted phone number for international calls",
            "phoneCountryIso2Verified?": "The country code of the phone number in ISO 3166-1 alpha-2 format",
            "phoneCountryCode*": "The phone prefix of the number",
            "phoneCountryCodeAlt*": "The alternative phone prefix of the number",
            "phoneCountryIso2=>": "Most likely country of origin of the phone number in ISO 3166-1 alpha-2 format",
            "phoneCountryIso2Alt=>": "Second most likely country of origin of the phone number in ISO 3166-1 alpha-2 format",
            "originCountryIso2=>": "Most likely country of origin of the name in ISO 3166-1 alpha-2 format",
            "originCountryIso2Alt=>": "Second most likely country of origin of the name in ISO 3166-1 alpha-2 format",
            "phoneNumber=>": "Submitted phone number",
            "verified*": "Indicates if the phone number could be positively verified using libphonenumber",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "summary*": "Identify the likely phone prefix of a name and phone number (formatted or unformatted) according to local context"
    },

    "/api2/json/phoneCodeGeoFeedbackLoop/{firstName}/{lastName}/{phoneNumber}/{phoneNumberE164}/{countryIso2}": {
        "request": {
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "phoneNumber=>": "A formatted or unformatted phone number",
            "phoneNumberE164*": "A phone number on the E164 format",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "internationalPhoneNumberVerified*": "The normalized phone number, verified using libphonenumber",
            "phoneCountryIso2Verified?": "The phone ISO2 country code, verified using libphonenumber",
            "phoneCountryCode*": "The phone country code of the phone number, verified using libphonenumber",
            "phoneCountryCodeAlt*": "The best alternative phone country code of the phone number",
            "phoneCountryIso2=>": "Most likely country of origin of the phone number in ISO 3166-1 alpha-2 format",
            "phoneCountryIso2Alt=>": "Second most likely country of origin of the phone number in ISO 3166-1 alpha-2 format",
            "originCountryIso2=>": "Most likely country of origin of the name in ISO 3166-1 alpha-2 format",
            "originCountryIso2Alt=>": "Second most likely country of origin of the name in ISO 3166-1 alpha-2 format",
            "phoneNumber=>": "Submitted phone number",
            "verified*": "Indicates if the phone number could be positively verified using libphonenumber",
            "score=>": "Higher implies a more reliable result, but score is not normalized. Use probabilityCalibrated if available",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "summary*": "Suggest a phone prefix, according to a name, phone number (formatted or unformatted) and local context, to help us improve our technology"
    },

    "/api2/json/phoneCodeBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "phoneNumber=>": "A formatted or unformatted phone number",
            "FirstLastNameOriginedOut": {
                "script?": "Characters set used for analysis",
                "id?": "Unique identifier",
                "firstName?": "The first name (also known as given name)",
                "lastName?": "The last name (also known as family name, or surname)",
                "countryOrigin?": "Most likely country of origin in ISO 3166-1 alpha-2 format",
                "countryOriginAlt?": "Second most likely country of origin in ISO 3166-1 alpha-2 format",
                "countriesOriginTop?": "List countries of Origin (top 10)",
                "score?": "Higher implies a more reliable result, but score is not normalized. Use probabilityCalibrated if available",
                "regionOrigin?": "Most likely region of origin",
                "topRegionOrigin?": "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "subRegionOrigin?": "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "probabilityCalibrated?": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOrigin)",
                "probabilityAltCalibrated?": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOriginAlt)"
            }
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "internationalPhoneNumberVerified*": "The phone number, formatted to E164",
            "phoneCountryIso2Verified?": "The phone number, formatted to E164",
            "phoneCountryCode*": "The phone prefix of the number",
            "phoneCountryCodeAlt*": "The alternative phone prefix of the number",
            "phoneCountryIso2=>": "Most likely country of origin of the phone number in ISO 3166-1 alpha-2 format",
            "phoneCountryIso2Alt=>": "Second most likely country of origin of the phone number in ISO 3166-1 alpha-2 format",
            "originCountryIso2=>": "Most likely country of origin of the name in ISO 3166-1 alpha-2 format",
            "originCountryIso2Alt=>": "Second most likely country of origin of the name in ISO 3166-1 alpha-2 format",
            "phoneNumber=>": "Submitted phone number",
            "verified*": "Indicates if the phone number could be positively verified using libphonenumber",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "summary*": "Identify the likely country and phone prefix of up to 100 names and phone numbers (formatted or unformatted)"
    },

    "/api2/json/phoneCodeGeoBatch": {
        "request": {
            "id=>": "Unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "phoneNumber=>": "A formatted or unformatted phone number",
            "FirstLastNameOriginedOut": {
                "script?": "The alphabet or characters used in the parameters",
                "id?": "Unique identifier",
                "firstName?": "The first name (also known as given name)",
                "lastName?": "The last name (also known as family name, or surname)",
                "countryOrigin?": "Most likely country of origin in ISO 3166-1 alpha-2 format",
                "countryOriginAlt?": "Second most likely country of origin in ISO 3166-1 alpha-2 format",
                "countriesOriginTop?": "List countries of Origin (top 10)",
                "score?": "Higher implies a more reliable result, but score is not normalized. Use probabilityCalibrated if available",
                "regionOrigin?": "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "topRegionOrigin?": "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "subRegionOrigin?": "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "probabilityCalibrated?": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOrigin)",
                "probabilityAltCalibrated?": "Higher implies a more reliable result, ranges from 0 to 1 (for countryOriginAlt)"
            },
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format",
            "countryIso2Alt=>": "Second most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "firstName=>": "First name (or given name)",
            "lastName=>": "Last name (or family name)",
            "internationalPhoneNumberVerified*": "The phone number, formatted to E164",
            "phoneCountryIso2Verified?": "The phone number, formatted to E164",
            "phoneCountryCode*": "The phone prefix of the number",
            "phoneCountryCodeAlt*": "The alternative phone prefix of the number",
            "phoneCountryIso2=>": "Most likely country of origin of the phone number in ISO 3166-1 alpha-2 format",
            "phoneCountryIso2Alt=>": "Second most likely country of origin of the phone number in ISO 3166-1 alpha-2 format",
            "originCountryIso2=>": "Most likely country of origin of the name in ISO 3166-1 alpha-2 format",
            "originCountryIso2Alt=>": "Second most likely country of origin of the name in ISO 3166-1 alpha-2 format",
            "phoneNumber=>": "Submitted phone number",
            "verified*": "Indicates if the phone number could be positively verified using libphonenumber",
            "score=>": "Higher implies a more reliable result, score is not normalized",
            "countryIso2=>": "Most likely country of origin in ISO 3166-1 alpha-2 format"
        },
        "summary*": "Identify the likely phone prefix of up to 100 names and phone numbers (formatted or unformatted) according to local context"
    },

    "/api2/json/parseName/{nameFull}": {
        "request": {
            "nameFull=>": "Personal full name (first name and last name)"
        },
        "response": {
            "script=>": "Characters set used for analysis",
            "id=>": "Provided unique identifier",
            "name*": "The name, as it was given for analysis",
            "nameParserType?": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "nameParserTypeAlt?": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order",
            "firstLastName": {
                "script=>": "",
                "id=>": "",
                "firstName=>": "First name (or given name)",
                "lastName=>": "Last name (or family name)"
            },
            "score=>": "Higher implies a more reliable result, score is not normalized"
        },
        "summary*": "Split a full name into a likely first and last name structure. "
    }
}
