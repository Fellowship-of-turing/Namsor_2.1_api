{
    "/api2/json/country/{personalNameFull}": {
        "request": {
            "personalNameFull": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name.",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "country": "Most likely country ",
            "countryAlt": "Second best alternative : country ",
            "region": "Most likely region (based on country ISO2 code)",
            "topRegion": "Most likely top region (based on country ISO2 code)",
            "subRegion": "Most likely sub region (based on country ISO2 code)",
            "countriesTop": "List countries (top 10)",
            "probabilityCalibrated": "The calibrated probability for country to have been guessed correctly.",
            "probabilityAltCalibrated": "The calibrated probability for country OR countryAlt to have been guessed correctly."
        },
        "summary": "[USES 10 UNITS PER NAME] Infer the likely country of residence of a personal full name, or one surname. Assumes names as they are in the country of residence OR the country of origin."
    },
    "/api2/json/nameType/{properNoun}": {
        "request": {
            "properNoun": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "commonType": "The most likely common name type",
            "commonTypeAlt": "Best alternative for : The most likely common name type",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely type of a proper noun (personal name, brand name, place name etc.)"
    },
    "/api2/json/disable/{source}/{disabled}": {
        "request": {
            "source": "The API Key to set as enabled/disabled.",
            "disabled": "*** Boolean ***"
        },
        "response": {},
        "summary": "Activate/deactivate an API Key."
    },
    "/api2/json/origin/{firstName}/{lastName}": {
        "request": {
            "firstName": "*** String ***",
            "lastName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "countryOrigin": "Most likely country of Origin",
            "countryOriginAlt": "Second best alternative : country of Origin",
            "countriesOriginTop": "List countries of Origin (top 10)",
            "score": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "regionOrigin": "Most likely region of Origin (based on countryOrigin ISO2 code)",
            "topRegionOrigin": "Most likely top region of Origin (based on countryOrigin ISO2 code)",
            "subRegionOrigin": "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
            "probabilityCalibrated": "The calibrated probability for countryOrigin to have been guessed correctly.",
            "probabilityAltCalibrated": "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly."
        },
        "summary": "[USES 10 UNITS PER NAME] Infer the likely country of origin of a personal name. Assumes names as they are in the country of origin. For US, CA, AU, NZ and other melting-pots : use 'diaspora' instead."
    },
    "/api2/json/softwareVersion": {
        "request": {},
        "response": {
            "softwareNameAndVersion": "The software version",
            "softwareVersion": "The software version major minor build"
        },
        "summary": "Get the current software version"
    },
    "/api2/json/apiStatus": {
        "request": {},
        "response": {
            "softwareVersion": {
                "softwareNameAndVersion": "The software version",
                "softwareVersion": "The software version major minor build"
            },
            "classifiers": {
                "classifierName": "The classifier name",
                "serving": "True if the classifier is serving requests (has reached minimal learning, is not shutting down)",
                "learning": "True if the classifier is learning",
                "shuttingDown": "True if the classifier is shutting down",
                "probabilityCalibrated": "True if the classifier has finished the initial learning and calibrated probabilities (meanwhile, during initial learning, probabilities will be equal to -1)"
            }
        },
        "summary": "Prints the current status of the classifiers. A classifier name in apiStatus corresponds to a service name in apiServices."
    },
    "/api2/json/apiServices": {
        "request": {},
        "response": {
            "serviceName": "A service name corresponds to classifier name in apiStatus (ex. personalname_gender or personalfullname_gender)",
            "serviceGroup": "Groups together classifiers providing a similar service (ex. gender groups personalname_gender and personalfullname_gender)",
            "costInUnits": "Indicates how many units per call this service costs (ex. the number of units per name)"
        },
        "summary": "List of classification services and usage cost in Units per classification (default is 1=ONE Unit). Some API endpoints (ex. Corridor) combine multiple classifiers."
    },
    "/api2/json/taxonomyClasses/{classifierName}": {
        "request": {
            "classifierName": "*** String ***"
        },
        "response": {
            "classifierName": "Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)",
            "taxonomyClasses": "The taxonomy classes this classifier classifies to"
        },
        "summary": "Print the taxonomy classes valid for the given classifier."
    },
    "/api2/json/apiUsage": {
        "request": {},
        "response": {
            "subscription": {
                "apiKey": "User API Key.",
                "planStarted": "Datetime when the user subscribed to the current plan.",
                "priorPlanStarted": "Datetime when the user subscribed to the prior plan.",
                "planEnded": "Datetime when the user ended the plan.",
                "taxRate": "Applicable tax rate for the plan.",
                "planName": "Current plan name.",
                "planBaseFeesKey": "Current plan key (as in Stripe product).",
                "planStatus": "Plan status.",
                "planQuota": "Current plan quota in quantity of units (NB: some API use several units per name).",
                "priceUSD": "Current plan monthly price expressed in USD (includes a free quota).",
                "priceOverageUSD": "Current plan price for overages expressed in USD (extra price per unit above the free quota).",
                "price": "Current plan price for overages expressed in Currency (extra price per unit above the free quota).",
                "priceOverage": "Current plan price for overages expressed in Currency (extra price per unit above the free quota).",
                "currency": "Current plan Currency for prices.",
                "currencyFactor": "For USD, GBP, EUR - the factor is 1.",
                "stripeCustomerId": "Stripe customer identifier.",
                "stripeStatus": "Stripe status ex active.",
                "stripeSubscription": "Stripe subscription identifier.",
                "userId": "Internal user identifier."
            },
            "billingPeriod": {
                "apiKey": "User API Key.",
                "subscriptionStarted": "Datetime when the user subscribed to the plan.",
                "periodStarted": "Datetime when the the plan's current period started.",
                "periodEnded": "Datetime when the the plan's current period endend.",
                "stripeCurrentPeriodEnd": "Datetime when the the plan's current period endend (in Stripe). Internal and Stripe periodicity should ~coincide.",
                "stripeCurrentPeriodStart": "Datetime when the the plan's current period started (in Stripe). Internal and Stripe periodicity should ~coincide.",
                "billingStatus": "Current period billing status ex OPEN.",
                "usage": "Current period usage in units (NB some API endpoints use more than one unit).",
                "softLimit": "Current period soft limit (reaching the limit sends an email notification).",
                "hardLimit": "Current period hard limit (reaching the limit sends an email notification and blocks the API Key)."
            },
            "overageExclTax": "Overage amount including any tax.",
            "overageInclTax": "Overage amount including tax (if applicable).",
            "overageCurrency": "Currency of the overage amount.",
            "overageQuantity": "Quantity above monthly quota of the current subscritpion, in units."
        },
        "summary": "Print current API usage."
    },
    "/api2/json/apiUsageHistory": {
        "request": {},
        "response": {
            "apiKey": {
                "apiKey": "The user API Key.",
                "userId": "The user identifier.",
                "admin": "The API Key has admin role.",
                "vetted": "The API Key is vetted (assumed truthful) for machine learning.",
                "learnable": "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "anonymized": "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).",
                "partner": "The API Key has partner role.",
                "striped": "The API Key is associated to a valid Stripe account.",
                "corporate": "The API Key has role corporate (ex SWIFT payments instead of Stripe payments).",
                "disabled": "The API Key is temporarily or permanently disabled."
            },
            "apiService": "The apiService corresponds to the classifier name.",
            "createdDateTime": "The create datetime of the counter.",
            "totalUsage": "The usage of the counter.",
            "lastFlushedDateTime": "The flush datetime of the counter.",
            "lastUsedDateTime": "The last usage datetime of the counter.",
            "serviceFeaturesUsage": "Usage of special features, such as Chinese, Japanese."
        },
        "summary": "Print historical API usage."
    },
    "/api2/json/apiUsageHistoryAggregate": {
        "request": {},
        "response": {
            "timeUnit": "Time unit is DAY, WEEK or MONTH depending on prior usage",
            "periodStart": "Start datetime of the reporting period",
            "periodEnd": "End datetime of the reporting period",
            "totalUsage": "Total usage in the current period",
            "historyTruncated": "If the history was truncaded due to data limit",
            "data": "Data points : usage per DAY, WEEK or MONTH and per apiService",
            "colHeaders": "apiServices as column headers ",
            "rowHeaders": "dates as row headers "
        },
        "summary": "Print historical API usage (in an aggregated view, by service, by day/hour/min)."
    },
    "/api2/json/learnable/{source}/{learnable}": {
        "request": {
            "source": "The API Key to set as learnable/non learnable.",
            "learnable": "*** Boolean ***"
        },
        "response": {},
        "summary": "Activate/deactivate learning from a source."
    },
    "/api2/json/anonymize/{source}/{anonymized}": {
        "request": {
            "source": "*** String ***",
            "anonymized": "*** Boolean ***"
        },
        "response": {},
        "summary": "Activate/deactivate anonymization for a source."
    },
    "/api2/json/nameTypeGeo/{properNoun}/{countryIso2}": {
        "request": {
            "properNoun": "*** String ***",
            "countryIso2": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "commonType": "The most likely common name type",
            "commonTypeAlt": "Best alternative for : The most likely common name type",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely type of a proper noun (personal name, brand name, place name etc.)"
    },
    "/api2/json/nameTypeBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "commonType": "The most likely common name type",
            "commonTypeAlt": "Best alternative for : The most likely common name type",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.)"
    },
    "/api2/json/nameTypeGeoBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***",
            "countryIso2": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "commonType": "The most likely common name type",
            "commonTypeAlt": "Best alternative for : The most likely common name type",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely common type of up to 100 proper nouns (personal name, brand name, place name etc.)"
    },
    "/api2/json/corridor/{countryIso2From}/{firstNameFrom}/{lastNameFrom}/{countryIso2To}/{firstNameTo}/{lastNameTo}": {
        "request": {
            "countryIso2From": "*** String ***",
            "firstNameFrom": "*** String ***",
            "lastNameFrom": "*** String ***",
            "countryIso2To": "*** String ***",
            "firstNameTo": "*** String ***",
            "lastNameTo": "*** String ***"
        },
        "response": {
            "id": "*** string ***",
            "FirstLastNameGenderedOut": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)",
                "likelyGender": "Most likely gender",
                "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
                "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
            },
            "FirstLastNameOriginedOut": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)",
                "countryOrigin": "Most likely country of Origin",
                "countryOriginAlt": "Second best alternative : country of Origin",
                "countriesOriginTop": "List countries of Origin (top 10)",
                "score": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "regionOrigin": "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "topRegionOrigin": "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "subRegionOrigin": "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "probabilityCalibrated": "The calibrated probability for countryOrigin to have been guessed correctly.",
                "probabilityAltCalibrated": "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly."
            },
            "FirstLastNameDiasporaedOut": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)",
                "score": "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "ethnicityAlt": "The second best alternative ethnicity",
                "ethnicity": "The most likely ethnicity",
                "lifted": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "countryIso2": "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "ethnicitiesTop": "List most likely ethnicities (top 10)"
            },
            "script": "*** string ***"
        },
        "summary": "[USES 20 UNITS PER NAME COUPLE] Infer several classifications for a cross border interaction between names (ex. remit, travel, intl com)"
    },
    "/api2/json/corridorBatch": {
        "request": {
            "id": "*** string ***",
            "firstLastNameGeoFrom": {
                "id": "*** string ***",
                "firstName": "*** string ***",
                "lastName": "*** string ***",
                "countryIso2": "*** string ***"
            },
            "firstLastNameGeoTo": {
                "id": "*** string ***",
                "firstName": "*** string ***",
                "lastName": "*** string ***",
                "countryIso2": "*** string ***"
            }
        },
        "response": {
            "id": "*** string ***",
            "FirstLastNameGenderedOut": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)",
                "likelyGender": "Most likely gender",
                "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
                "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
            },
            "FirstLastNameOriginedOut": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)",
                "countryOrigin": "Most likely country of Origin",
                "countryOriginAlt": "Second best alternative : country of Origin",
                "countriesOriginTop": "List countries of Origin (top 10)",
                "score": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "regionOrigin": "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "topRegionOrigin": "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "subRegionOrigin": "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "probabilityCalibrated": "The calibrated probability for countryOrigin to have been guessed correctly.",
                "probabilityAltCalibrated": "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly."
            },
            "FirstLastNameDiasporaedOut": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)",
                "score": "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "ethnicityAlt": "The second best alternative ethnicity",
                "ethnicity": "The most likely ethnicity",
                "lifted": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "countryIso2": "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "ethnicitiesTop": "List most likely ethnicities (top 10)"
            },
            "script": "*** string ***"
        },
        "summary": "[USES 20 UNITS PER NAME PAIR] Infer several classifications for up to 100 cross border interaction between names (ex. remit, travel, intl com)"
    },
    "/api2/json/gender/{firstName}/{lastName}": {
        "request": {
            "firstName": "*** String ***",
            "lastName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of a name."
    },
    "/api2/json/genderGeo/{firstName}/{lastName}/{countryIso2}": {
        "request": {
            "firstName": "*** String ***",
            "lastName": "*** String ***",
            "countryIso2": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of a name, given a local context (ISO2 country code)."
    },
    "/api2/json/genderGeoBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***",
            "countryIso2": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of up to 100 names, each given a local context (ISO2 country code)."
    },
    "/api2/json/genderBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of up to 100 names, detecting automatically the cultural context."
    },
    "/api2/json/genderFullGeo/{fullName}/{countryIso2}": {
        "request": {
            "fullName": "*** String ***",
            "countryIso2": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of a full name, given a local context (ISO2 country code)."
    },
    "/api2/json/genderFull/{fullName}": {
        "request": {
            "fullName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of a full name, ex. John H. Smith"
    },
    "/api2/json/genderFullBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of up to 100 full names, detecting automatically the cultural context."
    },
    "/api2/json/genderFullGeoBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***",
            "countryIso2": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of up to 100 full names, with a given cultural context (country ISO2 code)."
    },
    "/api2/json/originBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "countryOrigin": "Most likely country of Origin",
            "countryOriginAlt": "Second best alternative : country of Origin",
            "countriesOriginTop": "List countries of Origin (top 10)",
            "score": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "regionOrigin": "Most likely region of Origin (based on countryOrigin ISO2 code)",
            "topRegionOrigin": "Most likely top region of Origin (based on countryOrigin ISO2 code)",
            "subRegionOrigin": "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
            "probabilityCalibrated": "The calibrated probability for countryOrigin to have been guessed correctly.",
            "probabilityAltCalibrated": "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly."
        },
        "summary": "[USES 10 UNITS PER NAME] Infer the likely country of origin of up to 100 names, detecting automatically the cultural context."
    },
    "/api2/json/countryBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name.",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "country": "Most likely country ",
            "countryAlt": "Second best alternative : country ",
            "region": "Most likely region (based on country ISO2 code)",
            "topRegion": "Most likely top region (based on country ISO2 code)",
            "subRegion": "Most likely sub region (based on country ISO2 code)",
            "countriesTop": "List countries (top 10)",
            "probabilityCalibrated": "The calibrated probability for country to have been guessed correctly.",
            "probabilityAltCalibrated": "The calibrated probability for country OR countryAlt to have been guessed correctly."
        },
        "summary": "[USES 10 UNITS PER NAME] Infer the likely country of residence of up to 100 personal full names, or surnames. Assumes names as they are in the country of residence OR the country of origin."
    },
    "/api2/json/usRaceEthnicity/{firstName}/{lastName}": {
        "request": {
            "firstName": "*** String ***",
            "lastName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "raceEthnicityAlt": "Second most likely US 'race'/ethnicity",
            "raceEthnicity": "Most likely US 'race'/ethnicity",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "raceEthnicitiesTop": "List 'race'/ethnicities",
            "probabilityCalibrated": "The calibrated probability for raceEthnicity to have been guessed correctly.",
            "probabilityAltCalibrated": "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly."
        },
        "summary": "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander)."
    },
    "/api2/json/usRaceEthnicityZIP5/{firstName}/{lastName}/{zip5Code}": {
        "request": {
            "firstName": "*** String ***",
            "lastName": "*** String ***",
            "zip5Code": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "raceEthnicityAlt": "Second most likely US 'race'/ethnicity",
            "raceEthnicity": "Most likely US 'race'/ethnicity",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "raceEthnicitiesTop": "List 'race'/ethnicities",
            "probabilityCalibrated": "The calibrated probability for raceEthnicity to have been guessed correctly.",
            "probabilityAltCalibrated": "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly."
        },
        "summary": "[USES 10 UNITS PER NAME] Infer a US resident's likely race/ethnicity according to US Census taxonomy, using (optional) ZIP5 code info. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander)."
    },
    "/api2/json/usRaceEthnicityBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***",
            "countryIso2": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "raceEthnicityAlt": "Second most likely US 'race'/ethnicity",
            "raceEthnicity": "Most likely US 'race'/ethnicity",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "raceEthnicitiesTop": "List 'race'/ethnicities",
            "probabilityCalibrated": "The calibrated probability for raceEthnicity to have been guessed correctly.",
            "probabilityAltCalibrated": "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly."
        },
        "summary": "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander)."
    },
    "/api2/json/usZipRaceEthnicityBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***",
            "countryIso2": "*** string ***",
            "zipCode": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "raceEthnicityAlt": "Second most likely US 'race'/ethnicity",
            "raceEthnicity": "Most likely US 'race'/ethnicity",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "raceEthnicitiesTop": "List 'race'/ethnicities",
            "probabilityCalibrated": "The calibrated probability for raceEthnicity to have been guessed correctly.",
            "probabilityAltCalibrated": "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly."
        },
        "summary": "[USES 10 UNITS PER NAME] Infer up-to 100 US resident's likely race/ethnicity according to US Census taxonomy, with (optional) ZIP code. Output is W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino). Optionally add header X-OPTION-USRACEETHNICITY-TAXONOMY: USRACEETHNICITY-6CLASSES for two additional classes, AI_AN (American Indian or Alaskan Native) and PI (Pacific Islander)."
    },
    "/api2/json/diaspora/{countryIso2}/{firstName}/{lastName}": {
        "request": {
            "countryIso2": "*** String ***",
            "firstName": "*** String ***",
            "lastName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "score": "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "ethnicityAlt": "The second best alternative ethnicity",
            "ethnicity": "The most likely ethnicity",
            "lifted": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
            "countryIso2": "From input data, the countryIso2 of geographic context (US,CA etc.)",
            "ethnicitiesTop": "List most likely ethnicities (top 10)"
        },
        "summary": "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of a personal name, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.)"
    },
    "/api2/json/diasporaBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***",
            "countryIso2": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "score": "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "ethnicityAlt": "The second best alternative ethnicity",
            "ethnicity": "The most likely ethnicity",
            "lifted": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
            "countryIso2": "From input data, the countryIso2 of geographic context (US,CA etc.)",
            "ethnicitiesTop": "List most likely ethnicities (top 10)"
        },
        "summary": "[USES 20 UNITS PER NAME] Infer the likely ethnicity/diaspora of up to 100 personal names, given a country of residence ISO2 code (ex. US, CA, AU, NZ etc.)"
    },
    "/api2/json/parseName/{nameFull}/{countryIso2}": {
        "request": {
            "nameFull": "*** String ***",
            "countryIso2": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "nameParserType": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "nameParserTypeAlt": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "firstLastName": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)"
            },
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. For better accuracy, provide a geographic context."
    },
    "/api2/json/parseNameBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "nameParserType": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "nameParserTypeAlt": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "firstLastName": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)"
            },
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John."
    },
    "/api2/json/parseNameGeoBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***",
            "countryIso2": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "nameParserType": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "nameParserTypeAlt": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "firstLastName": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)"
            },
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. Giving a local context improves precision. "
    },
    "/api2/json/parseChineseName/{chineseName}": {
        "request": {
            "chineseName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "nameParserType": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "nameParserTypeAlt": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "firstLastName": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)"
            },
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name)"
    },
    "/api2/json/parseChineseNameBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "nameParserType": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "nameParserTypeAlt": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "firstLastName": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)"
            },
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely first/last name structure of a name, ex. 王晓明 -> 王(surname) 晓明(given name)."
    },
    "/api2/json/pinyinChineseName/{chineseName}": {
        "request": {
            "chineseName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "nameParserType": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "nameParserTypeAlt": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "firstLastName": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)"
            },
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Romanize the Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name)"
    },
    "/api2/json/pinyinChineseNameBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "nameParserType": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "nameParserTypeAlt": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "firstLastName": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)"
            },
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Romanize a list of Chinese name to Pinyin, ex. 王晓明 -> Wang (surname) Xiaoming (given name)."
    },
    "/api2/json/chineseNameMatch/{chineseSurnameLatin}/{chineseGivenNameLatin}/{chineseName}": {
        "request": {
            "chineseSurnameLatin": "*** String ***",
            "chineseGivenNameLatin": "*** String ***",
            "chineseName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "matchStatus": "The name matching status.",
            "score": "*** number ***"
        },
        "summary": "Return a score for matching Chinese name ex. 王晓明 with a romanized name ex. Wang Xiaoming"
    },
    "/api2/json/chineseNameMatchBatch": {
        "request": {
            "id": "*** string ***",
            "name1": {
                "id": "*** string ***",
                "firstName": "*** string ***",
                "lastName": "*** string ***"
            },
            "name2": {
                "id": "*** string ***",
                "name": "*** string ***"
            }
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "matchStatus": "The name matching status.",
            "score": "*** number ***"
        },
        "summary": "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming"
    },
    "/api2/json/genderChineseNamePinyin/{chineseSurnameLatin}/{chineseGivenNameLatin}": {
        "request": {
            "chineseSurnameLatin": "*** String ***",
            "chineseGivenNameLatin": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of a Chinese name in LATIN (Pinyin)."
    },
    "/api2/json/genderChineseNamePinyinBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of up to 100 Chinese names in LATIN (Pinyin)."
    },
    "/api2/json/genderChineseName/{chineseName}": {
        "request": {
            "chineseName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of a Chinese full name ex. 王晓明"
    },
    "/api2/json/genderChineseNameBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of up to 100 full names ex. 王晓明"
    },
    "/api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}": {
        "request": {
            "chineseSurnameLatin": "*** String ***",
            "chineseGivenNameLatin": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "orderOption": "The option for ordering",
            "matchCandidates": {
                "candidateName": "The name matching candidate name",
                "probability": "The name matching estimated probability.",
                "predScoreGivenName": "The given name prediction score.",
                "predScoreFamilyName": "The family name prediction score."
            }
        },
        "summary": "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming"
    },
    "/api2/json/chineseNameCandidatesBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "orderOption": "The option for ordering",
            "matchCandidates": {
                "candidateName": "The name matching candidate name",
                "probability": "The name matching estimated probability.",
                "predScoreGivenName": "The given name prediction score.",
                "predScoreFamilyName": "The family name prediction score."
            }
        },
        "summary": "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname), ex. Wang Xiaoming"
    },
    "/api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}": {
        "request": {
            "chineseSurnameLatin": "*** String ***",
            "chineseGivenNameLatin": "*** String ***",
            "knownGender": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "orderOption": "The option for ordering",
            "matchCandidates": {
                "candidateName": "The name matching candidate name",
                "probability": "The name matching estimated probability.",
                "predScoreGivenName": "The given name prediction score.",
                "predScoreFamilyName": "The family name prediction score."
            }
        },
        "summary": "Identify Chinese name candidates, based on the romanized name ex. Wang Xiaoming - having a known gender ('male' or 'female')"
    },
    "/api2/json/chineseNameCandidatesGenderBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***",
            "gender": "The known gender of the name"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "orderOption": "The option for ordering",
            "matchCandidates": {
                "candidateName": "The name matching candidate name",
                "probability": "The name matching estimated probability.",
                "predScoreGivenName": "The given name prediction score.",
                "predScoreFamilyName": "The family name prediction score."
            }
        },
        "summary": "Identify Chinese name candidates, based on the romanized name (firstName = chineseGivenName; lastName=chineseSurname) ex. Wang Xiaoming."
    },
    "/api2/json/parseJapaneseName/{japaneseName}": {
        "request": {
            "japaneseName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "nameParserType": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "nameParserTypeAlt": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "firstLastName": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)"
            },
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae"
    },
    "/api2/json/parseJapaneseNameBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "nameParserType": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "nameParserTypeAlt": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "firstLastName": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)"
            },
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely first/last name structure of a name, ex. 山本 早苗 or Yamamoto Sanae "
    },
    "/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{knownGender}": {
        "request": {
            "japaneseSurnameLatin": "*** String ***",
            "japaneseGivenNameLatin": "*** String ***",
            "knownGender": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "orderOption": "The option for ordering",
            "matchCandidates": {
                "candidateName": "The name matching candidate name",
                "probability": "The name matching estimated probability.",
                "predScoreGivenName": "The given name prediction score.",
                "predScoreFamilyName": "The family name prediction score."
            }
        },
        "summary": "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae - and a known gender."
    },
    "/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}": {
        "request": {
            "japaneseSurnameLatin": "*** String ***",
            "japaneseGivenNameLatin": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "orderOption": "The option for ordering",
            "matchCandidates": {
                "candidateName": "The name matching candidate name",
                "probability": "The name matching estimated probability.",
                "predScoreGivenName": "The given name prediction score.",
                "predScoreFamilyName": "The family name prediction score."
            }
        },
        "summary": "Identify japanese name candidates in KANJI, based on the romanized name ex. Yamamoto Sanae"
    },
    "/api2/json/japaneseNameLatinCandidates/{japaneseSurnameKanji}/{japaneseGivenNameKanji}": {
        "request": {
            "japaneseSurnameKanji": "*** String ***",
            "japaneseGivenNameKanji": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "orderOption": "The option for ordering",
            "matchCandidates": {
                "candidateName": "The name matching candidate name",
                "probability": "The name matching estimated probability.",
                "predScoreGivenName": "The given name prediction score.",
                "predScoreFamilyName": "The family name prediction score."
            }
        },
        "summary": "Romanize japanese name, based on the name in Kanji."
    },
    "/api2/json/japaneseNameKanjiCandidatesBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "orderOption": "The option for ordering",
            "matchCandidates": {
                "candidateName": "The name matching candidate name",
                "probability": "The name matching estimated probability.",
                "predScoreGivenName": "The given name prediction score.",
                "predScoreFamilyName": "The family name prediction score."
            }
        },
        "summary": "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname), ex. Yamamoto Sanae"
    },
    "/api2/json/japaneseNameGenderKanjiCandidatesBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***",
            "gender": "The known gender of the name"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "orderOption": "The option for ordering",
            "matchCandidates": {
                "candidateName": "The name matching candidate name",
                "probability": "The name matching estimated probability.",
                "predScoreGivenName": "The given name prediction score.",
                "predScoreFamilyName": "The family name prediction score."
            }
        },
        "summary": "Identify japanese name candidates in KANJI, based on the romanized name (firstName = japaneseGivenName; lastName=japaneseSurname) with KNOWN gender, ex. Yamamoto Sanae"
    },
    "/api2/json/japaneseNameLatinCandidatesBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "orderOption": "The option for ordering",
            "matchCandidates": {
                "candidateName": "The name matching candidate name",
                "probability": "The name matching estimated probability.",
                "predScoreGivenName": "The given name prediction score.",
                "predScoreFamilyName": "The family name prediction score."
            }
        },
        "summary": "Romanize japanese names, based on the name in KANJI"
    },
    "/api2/json/japaneseNameMatch/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}": {
        "request": {
            "japaneseSurnameLatin": "*** String ***",
            "japaneseGivenNameLatin": "*** String ***",
            "japaneseName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "matchStatus": "The name matching status.",
            "score": "*** number ***"
        },
        "summary": "Return a score for matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae"
    },
    "/api2/json/japaneseNameMatchFeedbackLoop/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}": {
        "request": {
            "japaneseSurnameLatin": "*** String ***",
            "japaneseGivenNameLatin": "*** String ***",
            "japaneseName": "*** String ***"
        },
        "response": {
            "feedbackCredits": "Number of units recredited as per feedback loop successful classification"
        },
        "summary": "[CREDITS 1 UNIT] Feedback loop to better perform matching Japanese name in KANJI ex. 山本 早苗 with a romanized name ex. Yamamoto Sanae"
    },
    "/api2/json/japaneseNameMatchBatch": {
        "request": {
            "id": "*** string ***",
            "name1": {
                "id": "*** string ***",
                "firstName": "*** string ***",
                "lastName": "*** string ***"
            },
            "name2": {
                "id": "*** string ***",
                "name": "*** string ***"
            }
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "matchStatus": "The name matching status.",
            "score": "*** number ***"
        },
        "summary": "Return a score for matching a list of Japanese names in KANJI ex. 山本 早苗 with romanized names ex. Yamamoto Sanae"
    },
    "/api2/json/genderJapaneseName/{japaneseSurname}/{japaneseGivenName}": {
        "request": {
            "japaneseSurname": "*** String ***",
            "japaneseGivenName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of a Japanese name in LATIN (Pinyin)."
    },
    "/api2/json/genderJapaneseNameBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of up to 100 Japanese names in LATIN (Pinyin)."
    },
    "/api2/json/genderJapaneseNameFull/{japaneseName}": {
        "request": {
            "japaneseName": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of a Japanese full name ex. 王晓明"
    },
    "/api2/json/genderJapaneseNameFullBatch": {
        "request": {
            "id": "*** string ***",
            "name": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "likelyGender": "Most likely gender",
            "genderScale": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value",
            "score": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "probabilityCalibrated": "The calibrated probability for inferred gender to have been guessed correctly."
        },
        "summary": "Infer the likely gender of up to 100 full names"
    },
    "/api2/json/phoneCode/{firstName}/{lastName}/{phoneNumber}": {
        "request": {
            "firstName": "*** String ***",
            "lastName": "*** String ***",
            "phoneNumber": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "internationalPhoneNumberVerified": "The normalized phone number, verified using libphonenumber.",
            "phoneCountryIso2Verified": "The phone ISO2 country code, verified using libphonenumber.",
            "phoneCountryCode": "The phone country code of the phone number, verified using libphonenumber.",
            "phoneCountryCodeAlt": "The best alternative phone country code of the phone number.",
            "phoneCountryIso2": "The likely country of the phone number.",
            "phoneCountryIso2Alt": "The best alternative country of the phone number.",
            "originCountryIso2": "The likely country of origin of the name.",
            "originCountryIso2Alt": "The best alternative country of origin of the name.",
            "phoneNumber": "The input phone number.",
            "verified": "Indicates if the phone number could be positively verified using libphonenumber.",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "countryIso2": "*** string ***"
        },
        "summary": "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, given a personal name and formatted / unformatted phone number."
    },
    "/api2/json/phoneCodeGeo/{firstName}/{lastName}/{phoneNumber}/{countryIso2}": {
        "request": {
            "firstName": "*** String ***",
            "lastName": "*** String ***",
            "phoneNumber": "*** String ***",
            "countryIso2": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "internationalPhoneNumberVerified": "The normalized phone number, verified using libphonenumber.",
            "phoneCountryIso2Verified": "The phone ISO2 country code, verified using libphonenumber.",
            "phoneCountryCode": "The phone country code of the phone number, verified using libphonenumber.",
            "phoneCountryCodeAlt": "The best alternative phone country code of the phone number.",
            "phoneCountryIso2": "The likely country of the phone number.",
            "phoneCountryIso2Alt": "The best alternative country of the phone number.",
            "originCountryIso2": "The likely country of origin of the name.",
            "originCountryIso2Alt": "The best alternative country of origin of the name.",
            "phoneNumber": "The input phone number.",
            "verified": "Indicates if the phone number could be positively verified using libphonenumber.",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "countryIso2": "*** string ***"
        },
        "summary": "[USES 11 UNITS PER NAME] Infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence)."
    },
    "/api2/json/phoneCodeGeoFeedbackLoop/{firstName}/{lastName}/{phoneNumber}/{phoneNumberE164}/{countryIso2}": {
        "request": {
            "firstName": "*** String ***",
            "lastName": "*** String ***",
            "phoneNumber": "*** String ***",
            "phoneNumberE164": "*** String ***",
            "countryIso2": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "internationalPhoneNumberVerified": "The normalized phone number, verified using libphonenumber.",
            "phoneCountryIso2Verified": "The phone ISO2 country code, verified using libphonenumber.",
            "phoneCountryCode": "The phone country code of the phone number, verified using libphonenumber.",
            "phoneCountryCodeAlt": "The best alternative phone country code of the phone number.",
            "phoneCountryIso2": "The likely country of the phone number.",
            "phoneCountryIso2Alt": "The best alternative country of the phone number.",
            "originCountryIso2": "The likely country of origin of the name.",
            "originCountryIso2Alt": "The best alternative country of origin of the name.",
            "phoneNumber": "The input phone number.",
            "verified": "Indicates if the phone number could be positively verified using libphonenumber.",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "countryIso2": "*** string ***"
        },
        "summary": "[CREDITS 1 UNIT] Feedback loop to better infer the likely phone prefix, given a personal name and formatted / unformatted phone number, with a local context (ISO2 country of residence)."
    },
    "/api2/json/phoneCodeBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***",
            "phoneNumber": "*** string ***",
            "FirstLastNameOriginedOut": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)",
                "countryOrigin": "Most likely country of Origin",
                "countryOriginAlt": "Second best alternative : country of Origin",
                "countriesOriginTop": "List countries of Origin (top 10)",
                "score": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "regionOrigin": "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "topRegionOrigin": "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "subRegionOrigin": "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "probabilityCalibrated": "The calibrated probability for countryOrigin to have been guessed correctly.",
                "probabilityAltCalibrated": "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly."
            }
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "internationalPhoneNumberVerified": "The normalized phone number, verified using libphonenumber.",
            "phoneCountryIso2Verified": "The phone ISO2 country code, verified using libphonenumber.",
            "phoneCountryCode": "The phone country code of the phone number, verified using libphonenumber.",
            "phoneCountryCodeAlt": "The best alternative phone country code of the phone number.",
            "phoneCountryIso2": "The likely country of the phone number.",
            "phoneCountryIso2Alt": "The best alternative country of the phone number.",
            "originCountryIso2": "The likely country of origin of the name.",
            "originCountryIso2Alt": "The best alternative country of origin of the name.",
            "phoneNumber": "The input phone number.",
            "verified": "Indicates if the phone number could be positively verified using libphonenumber.",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "countryIso2": "*** string ***"
        },
        "summary": "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, detecting automatically the local context given a name and formatted / unformatted phone number."
    },
    "/api2/json/phoneCodeGeoBatch": {
        "request": {
            "id": "*** string ***",
            "firstName": "*** string ***",
            "lastName": "*** string ***",
            "phoneNumber": "*** string ***",
            "FirstLastNameOriginedOut": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)",
                "countryOrigin": "Most likely country of Origin",
                "countryOriginAlt": "Second best alternative : country of Origin",
                "countriesOriginTop": "List countries of Origin (top 10)",
                "score": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "regionOrigin": "Most likely region of Origin (based on countryOrigin ISO2 code)",
                "topRegionOrigin": "Most likely top region of Origin (based on countryOrigin ISO2 code)",
                "subRegionOrigin": "Most likely sub region of Origin (based on countryOrigin ISO2 code)",
                "probabilityCalibrated": "The calibrated probability for countryOrigin to have been guessed correctly.",
                "probabilityAltCalibrated": "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly."
            },
            "countryIso2": "*** string ***",
            "countryIso2Alt": "*** string ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "firstName": "The first name (also known as given name)",
            "lastName": "The last name (also known as family name, or surname)",
            "internationalPhoneNumberVerified": "The normalized phone number, verified using libphonenumber.",
            "phoneCountryIso2Verified": "The phone ISO2 country code, verified using libphonenumber.",
            "phoneCountryCode": "The phone country code of the phone number, verified using libphonenumber.",
            "phoneCountryCodeAlt": "The best alternative phone country code of the phone number.",
            "phoneCountryIso2": "The likely country of the phone number.",
            "phoneCountryIso2Alt": "The best alternative country of the phone number.",
            "originCountryIso2": "The likely country of origin of the name.",
            "originCountryIso2Alt": "The best alternative country of origin of the name.",
            "phoneNumber": "The input phone number.",
            "verified": "Indicates if the phone number could be positively verified using libphonenumber.",
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
            "countryIso2": "*** string ***"
        },
        "summary": "[USES 11 UNITS PER NAME] Infer the likely country and phone prefix, of up to 100 personal names, with a local context (ISO2 country of residence)."
    },
    "/api2/json/parseName/{nameFull}": {
        "request": {
            "nameFull": "*** String ***"
        },
        "response": {
            "script": "*** string ***",
            "id": "*** string ***",
            "name": "The input name",
            "nameParserType": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "nameParserTypeAlt": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
            "firstLastName": {
                "script": "*** string ***",
                "id": "*** string ***",
                "firstName": "The first name (also known as given name)",
                "lastName": "The last name (also known as family name, or surname)"
            },
            "score": "Higher score is better, but score is not normalized. Use calibratedProbability if available. "
        },
        "summary": "Infer the likely first/last name structure of a name, ex. John Smith or SMITH, John or SMITH; John. "
    }
}