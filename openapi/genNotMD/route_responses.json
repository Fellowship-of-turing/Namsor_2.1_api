{
    "/api2/json/nameType/{properNoun}": {
        "type": "object",
        "description": "A typed name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "commonType": {
                "type": "string",
                "description": "The most likely common name type"
            },
            "commonTypeAlt": {
                "type": "string",
                "description": "Best alternative for : The most likely common name type"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/origin/{firstName}/{lastName}": {
        "type": "object",
        "description": "A origined name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "countryOrigin": {
                "type": "string",
                "description": "Most likely country of Origin"
            },
            "countryOriginAlt": {
                "type": "string",
                "description": "Second best alternative : country of Origin"
            },
            "countriesOriginTop": {
                "type": "array",
                "description": "List countries of Origin (top 10)",
                "items": {
                    "type": "string",
                    "description": "List countries of Origin (top 10)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "regionOrigin": {
                "type": "string",
                "description": "Most likely region of Origin (based on countryOrigin ISO2 code)"
            },
            "topRegionOrigin": {
                "type": "string",
                "description": "Most likely top region of Origin (based on countryOrigin ISO2 code)"
            },
            "subRegionOrigin": {
                "type": "string",
                "description": "Most likely sub region of Origin (based on countryOrigin ISO2 code)"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for countryOrigin to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/country/{personalNameFull}": {
        "type": "object",
        "description": "A origined name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name."
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "country": {
                "type": "string",
                "description": "Most likely country "
            },
            "countryAlt": {
                "type": "string",
                "description": "Second best alternative : country "
            },
            "region": {
                "type": "string",
                "description": "Most likely region (based on country ISO2 code)"
            },
            "topRegion": {
                "type": "string",
                "description": "Most likely top region (based on country ISO2 code)"
            },
            "subRegion": {
                "type": "string",
                "description": "Most likely sub region (based on country ISO2 code)"
            },
            "countriesTop": {
                "type": "array",
                "description": "List countries (top 10)",
                "items": {
                    "type": "string",
                    "description": "List countries (top 10)"
                }
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/softwareVersion": {
        "type": "object",
        "description": "The current software version",
        "schema": {
            "softwareNameAndVersion": {
                "type": "string",
                "description": "The software version"
            },
            "softwareVersion": {
                "type": "array",
                "description": "The software version major minor build",
                "items": {
                    "type": "integer",
                    "description": "The software version major minor build",
                    "format": "int32"
                }
            }
        }
    },
    "/api2/json/apiStatus": {
        "type": "object",
        "description": "Available classifiers and status",
        "schema": {
            "softwareVersion": {
                "softwareNameAndVersion": {
                    "type": "string",
                    "description": "The software version"
                },
                "softwareVersion": {
                    "type": "array",
                    "description": "The software version major minor build",
                    "items": {
                        "type": "integer",
                        "description": "The software version major minor build",
                        "format": "int32"
                    }
                }
            },
            "classifiers": [
                {
                    "classifierName": {
                        "type": "string",
                        "description": "The classifier name"
                    },
                    "serving": {
                        "type": "boolean",
                        "description": "True if the classifier is serving requests (has reached minimal learning, is not shutting down)"
                    },
                    "learning": {
                        "type": "boolean",
                        "description": "True if the classifier is learning"
                    },
                    "shuttingDown": {
                        "type": "boolean",
                        "description": "True if the classifier is shutting down"
                    },
                    "probabilityCalibrated": {
                        "type": "boolean",
                        "description": "True if the classifier has finished the initial learning and calibrated probabilities (meanwhile, during initial learning, probabilities will be equal to -1)"
                    }
                }
            ]
        }
    },
    "/api2/json/apiServices": {
        "type": "array",
        "description": "Available services",
        "schema": {
            "serviceName": {
                "type": "string",
                "description": "A service name corresponds to classifier name in apiStatus (ex. personalname_gender or personalfullname_gender)"
            },
            "serviceGroup": {
                "type": "string",
                "description": "Groups together classifiers providing a similar service (ex. gender groups personalname_gender and personalfullname_gender)"
            },
            "costInUnits": {
                "type": "integer",
                "description": "Indicates how many units per call this service costs (ex. the number of units per name)",
                "format": "int32"
            }
        }
    },
    "/api2/json/taxonomyClasses/{classifierName}": {
        "type": "object",
        "description": "Available plans",
        "schema": {
            "classifierName": {
                "type": "string",
                "description": "Name of the classifier as per apiStatus (corresponds also to the name of the service in apiServices)"
            },
            "taxonomyClasses": {
                "type": "array",
                "description": "The taxonomy classes this classifier classifies to",
                "items": {
                    "type": "string",
                    "description": "The taxonomy classes this classifier classifies to"
                }
            }
        }
    },
    "/api2/json/apiUsage": {
        "type": "object",
        "description": "Print current API usage.",
        "schema": {
            "subscription": {
                "apiKey": {
                    "type": "string",
                    "description": "User API Key."
                },
                "planStarted": {
                    "type": "integer",
                    "description": "Datetime when the user subscribed to the current plan.",
                    "format": "int64"
                },
                "priorPlanStarted": {
                    "type": "integer",
                    "description": "Datetime when the user subscribed to the prior plan.",
                    "format": "int64"
                },
                "planEnded": {
                    "type": "integer",
                    "description": "Datetime when the user ended the plan.",
                    "format": "int64"
                },
                "taxRate": {
                    "type": "number",
                    "description": "Applicable tax rate for the plan.",
                    "format": "double"
                },
                "planName": {
                    "type": "string",
                    "description": "Current plan name."
                },
                "planBaseFeesKey": {
                    "type": "string",
                    "description": "Current plan key (as in Stripe product)."
                },
                "planStatus": {
                    "type": "string",
                    "description": "Plan status."
                },
                "planQuota": {
                    "type": "integer",
                    "description": "Current plan quota in quantity of units (NB: some API use several units per name).",
                    "format": "int64"
                },
                "priceUSD": {
                    "type": "number",
                    "description": "Current plan monthly price expressed in USD (includes a free quota).",
                    "format": "double"
                },
                "priceOverageUSD": {
                    "type": "number",
                    "description": "Current plan price for overages expressed in USD (extra price per unit above the free quota).",
                    "format": "double"
                },
                "price": {
                    "type": "number",
                    "description": "Current plan price for overages expressed in Currency (extra price per unit above the free quota).",
                    "format": "double"
                },
                "priceOverage": {
                    "type": "number",
                    "description": "Current plan price for overages expressed in Currency (extra price per unit above the free quota).",
                    "format": "double"
                },
                "currency": {
                    "type": "string",
                    "description": "Current plan Currency for prices."
                },
                "currencyFactor": {
                    "type": "number",
                    "description": "For USD, GBP, EUR - the factor is 1.",
                    "format": "double"
                },
                "stripeCustomerId": {
                    "type": "string",
                    "description": "Stripe customer identifier."
                },
                "stripeStatus": {
                    "type": "string",
                    "description": "Stripe status ex active."
                },
                "stripeSubscription": {
                    "type": "string",
                    "description": "Stripe subscription identifier."
                },
                "userId": {
                    "type": "string",
                    "description": "Internal user identifier."
                }
            },
            "billingPeriod": {
                "apiKey": {
                    "type": "string",
                    "description": "User API Key."
                },
                "subscriptionStarted": {
                    "type": "integer",
                    "description": "Datetime when the user subscribed to the plan.",
                    "format": "int64"
                },
                "periodStarted": {
                    "type": "integer",
                    "description": "Datetime when the the plan's current period started.",
                    "format": "int64"
                },
                "periodEnded": {
                    "type": "integer",
                    "description": "Datetime when the the plan's current period endend.",
                    "format": "int64"
                },
                "stripeCurrentPeriodEnd": {
                    "type": "integer",
                    "description": "Datetime when the the plan's current period endend (in Stripe). Internal and Stripe periodicity should ~coincide.",
                    "format": "int64"
                },
                "stripeCurrentPeriodStart": {
                    "type": "integer",
                    "description": "Datetime when the the plan's current period started (in Stripe). Internal and Stripe periodicity should ~coincide.",
                    "format": "int64"
                },
                "billingStatus": {
                    "type": "string",
                    "description": "Current period billing status ex OPEN."
                },
                "usage": {
                    "type": "integer",
                    "description": "Current period usage in units (NB some API endpoints use more than one unit).",
                    "format": "int64"
                },
                "softLimit": {
                    "type": "integer",
                    "description": "Current period soft limit (reaching the limit sends an email notification).",
                    "format": "int64"
                },
                "hardLimit": {
                    "type": "integer",
                    "description": "Current period hard limit (reaching the limit sends an email notification and blocks the API Key).",
                    "format": "int64"
                }
            },
            "overageExclTax": {
                "type": "number",
                "description": "Overage amount including any tax.",
                "format": "double"
            },
            "overageInclTax": {
                "type": "number",
                "description": "Overage amount including tax (if applicable).",
                "format": "double"
            },
            "overageCurrency": {
                "type": "string",
                "description": "Currency of the overage amount."
            },
            "overageQuantity": {
                "type": "integer",
                "description": "Quantity above monthly quota of the current subscritpion, in units.",
                "format": "int64"
            }
        }
    },
    "/api2/json/apiUsageHistory": {
        "type": "array",
        "description": "Print historical API usage (NB. new output format form v2.0.15)",
        "schema": {
            "apiKey": {
                "apiKey": {
                    "type": "string",
                    "description": "The user API Key.",
                    "xml": {
                        "name": "api_key"
                    }
                },
                "userId": {
                    "type": "string",
                    "description": "The user identifier."
                },
                "admin": {
                    "type": "boolean",
                    "description": "The API Key has admin role."
                },
                "vetted": {
                    "type": "boolean",
                    "description": "The API Key is vetted (assumed truthful) for machine learning."
                },
                "learnable": {
                    "type": "boolean",
                    "description": "The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed)."
                },
                "anonymized": {
                    "type": "boolean",
                    "description": "The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed)."
                },
                "partner": {
                    "type": "boolean",
                    "description": "The API Key has partner role."
                },
                "striped": {
                    "type": "boolean",
                    "description": "The API Key is associated to a valid Stripe account."
                },
                "corporate": {
                    "type": "boolean",
                    "description": "The API Key has role corporate (ex SWIFT payments instead of Stripe payments)."
                },
                "disabled": {
                    "type": "boolean",
                    "description": "The API Key is temporarily or permanently disabled."
                }
            },
            "apiService": {
                "type": "string",
                "description": "The apiService corresponds to the classifier name."
            },
            "createdDateTime": {
                "type": "integer",
                "description": "The create datetime of the counter.",
                "format": "int64"
            },
            "totalUsage": {
                "type": "integer",
                "description": "The usage of the counter.",
                "format": "int64"
            },
            "lastFlushedDateTime": {
                "type": "integer",
                "description": "The flush datetime of the counter.",
                "format": "int64"
            },
            "lastUsedDateTime": {
                "type": "integer",
                "description": "The last usage datetime of the counter.",
                "format": "int64"
            },
            "serviceFeaturesUsage": {
                "type": "object",
                "additionalProperties": {
                    "type": "integer",
                    "description": "Usage of special features, such as Chinese, Japanese.",
                    "format": "int64"
                },
                "description": "Usage of special features, such as Chinese, Japanese."
            }
        }
    },
    "/api2/json/apiUsageHistoryAggregate": {
        "type": "object",
        "description": "Print historical API usage.",
        "schema": {
            "timeUnit": {
                "type": "string",
                "description": "Time unit is DAY, WEEK or MONTH depending on prior usage"
            },
            "periodStart": {
                "type": "integer",
                "description": "Start datetime of the reporting period",
                "format": "int64"
            },
            "periodEnd": {
                "type": "integer",
                "description": "End datetime of the reporting period",
                "format": "int64"
            },
            "totalUsage": {
                "type": "integer",
                "description": "Total usage in the current period",
                "format": "int64"
            },
            "historyTruncated": {
                "type": "boolean",
                "description": "If the history was truncaded due to data limit"
            },
            "data": {
                "type": "array",
                "description": "Data points : usage per DAY, WEEK or MONTH and per apiService",
                "items": {
                    "type": "array",
                    "description": "Data points : usage per DAY, WEEK or MONTH and per apiService",
                    "items": {
                        "type": "integer",
                        "description": "Data points : usage per DAY, WEEK or MONTH and per apiService",
                        "format": "int32"
                    }
                }
            },
            "colHeaders": {
                "type": "array",
                "description": "apiServices as column headers ",
                "items": {
                    "type": "string",
                    "description": "apiServices as column headers "
                }
            },
            "rowHeaders": {
                "type": "array",
                "description": "dates as row headers ",
                "items": {
                    "type": "string",
                    "description": "dates as row headers "
                }
            }
        }
    },
    "/api2/json/nameTypeGeo/{properNoun}/{countryIso2}": {
        "type": "object",
        "description": "A typed name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "commonType": {
                "type": "string",
                "description": "The most likely common name type"
            },
            "commonTypeAlt": {
                "type": "string",
                "description": "Best alternative for : The most likely common name type"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/nameTypeBatch": {
        "type": "array",
        "description": "A list of commonTypeized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "commonType": {
                "type": "string",
                "description": "The most likely common name type"
            },
            "commonTypeAlt": {
                "type": "string",
                "description": "Best alternative for : The most likely common name type"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/nameTypeGeoBatch": {
        "type": "array",
        "description": "A list of commonTypeized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "commonType": {
                "type": "string",
                "description": "The most likely common name type"
            },
            "commonTypeAlt": {
                "type": "string",
                "description": "Best alternative for : The most likely common name type"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/corridor/{countryIso2From}/{firstNameFrom}/{lastNameFrom}/{countryIso2To}/{firstNameTo}/{lastNameTo}": {
        "type": "object",
        "description": "Two classified names.",
        "schema": {
            "id": {
                "type": "string",
                "xml": {
                    "attribute": true
                }
            },
            "FirstLastNameGenderedOut": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                },
                "likelyGender": {
                    "type": "string",
                    "description": "Most likely gender",
                    "enum": [
                        "male",
                        "female",
                        "unknown"
                    ]
                },
                "genderScale": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                    "format": "double"
                },
                "score": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number",
                    "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                    "format": "double"
                },
                "probabilityCalibrated": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                    "format": "double"
                }
            },
            "FirstLastNameOriginedOut": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                },
                "countryOrigin": {
                    "type": "string",
                    "description": "Most likely country of Origin"
                },
                "countryOriginAlt": {
                    "type": "string",
                    "description": "Second best alternative : country of Origin"
                },
                "countriesOriginTop": {
                    "type": "array",
                    "description": "List countries of Origin (top 10)",
                    "items": {
                        "type": "string",
                        "description": "List countries of Origin (top 10)"
                    }
                },
                "score": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number",
                    "description": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                    "format": "double"
                },
                "regionOrigin": {
                    "type": "string",
                    "description": "Most likely region of Origin (based on countryOrigin ISO2 code)"
                },
                "topRegionOrigin": {
                    "type": "string",
                    "description": "Most likely top region of Origin (based on countryOrigin ISO2 code)"
                },
                "subRegionOrigin": {
                    "type": "string",
                    "description": "Most likely sub region of Origin (based on countryOrigin ISO2 code)"
                },
                "probabilityCalibrated": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "The calibrated probability for countryOrigin to have been guessed correctly. -1 = still calibrating. ",
                    "format": "double"
                },
                "probabilityAltCalibrated": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly. -1 = still calibrating. ",
                    "format": "double"
                }
            },
            "FirstLastNameDiasporaedOut": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                },
                "score": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number",
                    "description": "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                    "format": "double"
                },
                "ethnicityAlt": {
                    "type": "string",
                    "description": "The second best alternative ethnicity",
                    "example": "Japanese",
                    "xml": {
                        "attribute": true
                    }
                },
                "ethnicity": {
                    "type": "string",
                    "description": "The most likely ethnicity",
                    "example": "Chinese",
                    "xml": {
                        "attribute": true
                    }
                },
                "lifted": {
                    "type": "boolean",
                    "description": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                    "xml": {
                        "attribute": true
                    }
                },
                "countryIso2": {
                    "type": "string",
                    "description": "From input data, the countryIso2 of geographic context (US,CA etc.)",
                    "xml": {
                        "attribute": true
                    }
                },
                "ethnicitiesTop": {
                    "type": "array",
                    "description": "List most likely ethnicities (top 10)",
                    "items": {
                        "type": "string",
                        "description": "List most likely ethnicities (top 10)"
                    }
                },
                "probabilityCalibrated": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating. ",
                    "format": "double"
                },
                "probabilityAltCalibrated": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                    "format": "double"
                }
            },
            "script": {
                "type": "string"
            }
        }
    },
    "/api2/json/corridorBatch": {
        "type": "array",
        "description": "A list of classified name pairs.",
        "schema": {
            "id": {
                "type": "string",
                "xml": {
                    "attribute": true
                }
            },
            "FirstLastNameGenderedOut": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                },
                "likelyGender": {
                    "type": "string",
                    "description": "Most likely gender",
                    "enum": [
                        "male",
                        "female",
                        "unknown"
                    ]
                },
                "genderScale": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                    "format": "double"
                },
                "score": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number",
                    "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                    "format": "double"
                },
                "probabilityCalibrated": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                    "format": "double"
                }
            },
            "FirstLastNameOriginedOut": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                },
                "countryOrigin": {
                    "type": "string",
                    "description": "Most likely country of Origin"
                },
                "countryOriginAlt": {
                    "type": "string",
                    "description": "Second best alternative : country of Origin"
                },
                "countriesOriginTop": {
                    "type": "array",
                    "description": "List countries of Origin (top 10)",
                    "items": {
                        "type": "string",
                        "description": "List countries of Origin (top 10)"
                    }
                },
                "score": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number",
                    "description": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                    "format": "double"
                },
                "regionOrigin": {
                    "type": "string",
                    "description": "Most likely region of Origin (based on countryOrigin ISO2 code)"
                },
                "topRegionOrigin": {
                    "type": "string",
                    "description": "Most likely top region of Origin (based on countryOrigin ISO2 code)"
                },
                "subRegionOrigin": {
                    "type": "string",
                    "description": "Most likely sub region of Origin (based on countryOrigin ISO2 code)"
                },
                "probabilityCalibrated": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "The calibrated probability for countryOrigin to have been guessed correctly. -1 = still calibrating. ",
                    "format": "double"
                },
                "probabilityAltCalibrated": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly. -1 = still calibrating. ",
                    "format": "double"
                }
            },
            "FirstLastNameDiasporaedOut": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                },
                "score": {
                    "maximum": 100,
                    "minimum": 0,
                    "type": "number",
                    "description": "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                    "format": "double"
                },
                "ethnicityAlt": {
                    "type": "string",
                    "description": "The second best alternative ethnicity",
                    "example": "Japanese",
                    "xml": {
                        "attribute": true
                    }
                },
                "ethnicity": {
                    "type": "string",
                    "description": "The most likely ethnicity",
                    "example": "Chinese",
                    "xml": {
                        "attribute": true
                    }
                },
                "lifted": {
                    "type": "boolean",
                    "description": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                    "xml": {
                        "attribute": true
                    }
                },
                "countryIso2": {
                    "type": "string",
                    "description": "From input data, the countryIso2 of geographic context (US,CA etc.)",
                    "xml": {
                        "attribute": true
                    }
                },
                "ethnicitiesTop": {
                    "type": "array",
                    "description": "List most likely ethnicities (top 10)",
                    "items": {
                        "type": "string",
                        "description": "List most likely ethnicities (top 10)"
                    }
                },
                "probabilityCalibrated": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating. ",
                    "format": "double"
                },
                "probabilityAltCalibrated": {
                    "maximum": 1,
                    "minimum": -1,
                    "type": "number",
                    "description": "The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                    "format": "double"
                }
            },
            "script": {
                "type": "string"
            }
        }
    },
    "/api2/json/gender/{firstName}/{lastName}": {
        "type": "object",
        "description": "A genderized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderGeo/{firstName}/{lastName}/{countryIso2}": {
        "type": "object",
        "description": "A genderized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderGeoBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderFullGeo/{fullName}/{countryIso2}": {
        "type": "object",
        "description": "A genderized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderFull/{fullName}": {
        "type": "object",
        "description": "A genderized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderFullBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderFullGeoBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/originBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "countryOrigin": {
                "type": "string",
                "description": "Most likely country of Origin"
            },
            "countryOriginAlt": {
                "type": "string",
                "description": "Second best alternative : country of Origin"
            },
            "countriesOriginTop": {
                "type": "array",
                "description": "List countries of Origin (top 10)",
                "items": {
                    "type": "string",
                    "description": "List countries of Origin (top 10)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "regionOrigin": {
                "type": "string",
                "description": "Most likely region of Origin (based on countryOrigin ISO2 code)"
            },
            "topRegionOrigin": {
                "type": "string",
                "description": "Most likely top region of Origin (based on countryOrigin ISO2 code)"
            },
            "subRegionOrigin": {
                "type": "string",
                "description": "Most likely sub region of Origin (based on countryOrigin ISO2 code)"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for countryOrigin to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for countryOrigin OR countryOriginAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/subclassification/{countryIso2}/{firstName}/{lastName}": {
        "type": "object",
        "description": "A subclassificationed name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "countryIso2": {
                "type": "string",
                "description": "The input country ISO2 code",
                "xml": {
                    "attribute": true
                }
            },
            "subClassification": {
                "type": "string",
                "description": "Most likely subclassification ISO_3166-2 code"
            },
            "subClassificationAlt": {
                "type": "string",
                "description": "Second best alternative : subclassification ISO_3166-2 code"
            },
            "subclassificationTop": {
                "type": "array",
                "description": "List subclassification ISO_3166-2 codes (top 10)",
                "items": {
                    "type": "string",
                    "description": "List subclassification ISO_3166-2 codes (top 10)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/subclassificationBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "countryIso2": {
                "type": "string",
                "description": "The input country ISO2 code",
                "xml": {
                    "attribute": true
                }
            },
            "subClassification": {
                "type": "string",
                "description": "Most likely subclassification ISO_3166-2 code"
            },
            "subClassificationAlt": {
                "type": "string",
                "description": "Second best alternative : subclassification ISO_3166-2 code"
            },
            "subclassificationTop": {
                "type": "array",
                "description": "List subclassification ISO_3166-2 codes (top 10)",
                "items": {
                    "type": "string",
                    "description": "List subclassification ISO_3166-2 codes (top 10)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Origin score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for subclassification to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for subclassification OR subclassificationAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/countryBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name."
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "country": {
                "type": "string",
                "description": "Most likely country "
            },
            "countryAlt": {
                "type": "string",
                "description": "Second best alternative : country "
            },
            "region": {
                "type": "string",
                "description": "Most likely region (based on country ISO2 code)"
            },
            "topRegion": {
                "type": "string",
                "description": "Most likely top region (based on country ISO2 code)"
            },
            "subRegion": {
                "type": "string",
                "description": "Most likely sub region (based on country ISO2 code)"
            },
            "countriesTop": {
                "type": "array",
                "description": "List countries (top 10)",
                "items": {
                    "type": "string",
                    "description": "List countries (top 10)"
                }
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for country to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/usRaceEthnicity/{firstName}/{lastName}": {
        "type": "object",
        "description": "a US resident's likely race/ethnicity : W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*). *optionally",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "raceEthnicityAlt": {
                "type": "string",
                "description": "Second most likely US 'race'/ethnicity",
                "xml": {
                    "attribute": true
                },
                "enum": [
                    "W_NL",
                    "HL",
                    "A",
                    "B_NL",
                    "AI_AN",
                    "PI"
                ]
            },
            "raceEthnicity": {
                "type": "string",
                "description": "Most likely US 'race'/ethnicity",
                "xml": {
                    "attribute": true
                },
                "enum": [
                    "W_NL",
                    "HL",
                    "A",
                    "B_NL",
                    "AI_AN",
                    "PI"
                ]
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "raceEthnicitiesTop": {
                "type": "array",
                "description": "List 'race'/ethnicities",
                "items": {
                    "type": "string",
                    "description": "List 'race'/ethnicities"
                }
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/usRaceEthnicityZIP5/{firstName}/{lastName}/{zip5Code}": {
        "type": "object",
        "description": "a US resident's likely race/ethnicity : W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*). *optionally",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "raceEthnicityAlt": {
                "type": "string",
                "description": "Second most likely US 'race'/ethnicity",
                "xml": {
                    "attribute": true
                },
                "enum": [
                    "W_NL",
                    "HL",
                    "A",
                    "B_NL",
                    "AI_AN",
                    "PI"
                ]
            },
            "raceEthnicity": {
                "type": "string",
                "description": "Most likely US 'race'/ethnicity",
                "xml": {
                    "attribute": true
                },
                "enum": [
                    "W_NL",
                    "HL",
                    "A",
                    "B_NL",
                    "AI_AN",
                    "PI"
                ]
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "raceEthnicitiesTop": {
                "type": "array",
                "description": "List 'race'/ethnicities",
                "items": {
                    "type": "string",
                    "description": "List 'race'/ethnicities"
                }
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/usRaceEthnicityBatch": {
        "type": "array",
        "description": "A list of US resident's likely race/ethnicity. W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*). *optionally",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "raceEthnicityAlt": {
                "type": "string",
                "description": "Second most likely US 'race'/ethnicity",
                "xml": {
                    "attribute": true
                },
                "enum": [
                    "W_NL",
                    "HL",
                    "A",
                    "B_NL",
                    "AI_AN",
                    "PI"
                ]
            },
            "raceEthnicity": {
                "type": "string",
                "description": "Most likely US 'race'/ethnicity",
                "xml": {
                    "attribute": true
                },
                "enum": [
                    "W_NL",
                    "HL",
                    "A",
                    "B_NL",
                    "AI_AN",
                    "PI"
                ]
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "raceEthnicitiesTop": {
                "type": "array",
                "description": "List 'race'/ethnicities",
                "items": {
                    "type": "string",
                    "description": "List 'race'/ethnicities"
                }
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/usZipRaceEthnicityBatch": {
        "type": "array",
        "description": "A list of US resident's likely race/ethnicity. W_NL (white, non latino), HL (hispano latino),  A (asian, non latino), B_NL (black, non latino), AI_AN (American Indian or Alaskan Native*) and PI (Pacific Islander*). *optionally",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "raceEthnicityAlt": {
                "type": "string",
                "description": "Second most likely US 'race'/ethnicity",
                "xml": {
                    "attribute": true
                },
                "enum": [
                    "W_NL",
                    "HL",
                    "A",
                    "B_NL",
                    "AI_AN",
                    "PI"
                ]
            },
            "raceEthnicity": {
                "type": "string",
                "description": "Most likely US 'race'/ethnicity",
                "xml": {
                    "attribute": true
                },
                "enum": [
                    "W_NL",
                    "HL",
                    "A",
                    "B_NL",
                    "AI_AN",
                    "PI"
                ]
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "raceEthnicitiesTop": {
                "type": "array",
                "description": "List 'race'/ethnicities",
                "items": {
                    "type": "string",
                    "description": "List 'race'/ethnicities"
                }
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/diaspora/{countryIso2}/{firstName}/{lastName}": {
        "type": "object",
        "description": "A diaspora / ethnicity for given name and geography.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "ethnicityAlt": {
                "type": "string",
                "description": "The second best alternative ethnicity",
                "example": "Japanese",
                "xml": {
                    "attribute": true
                }
            },
            "ethnicity": {
                "type": "string",
                "description": "The most likely ethnicity",
                "example": "Chinese",
                "xml": {
                    "attribute": true
                }
            },
            "lifted": {
                "type": "boolean",
                "description": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "xml": {
                    "attribute": true
                }
            },
            "countryIso2": {
                "type": "string",
                "description": "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "xml": {
                    "attribute": true
                }
            },
            "ethnicitiesTop": {
                "type": "array",
                "description": "List most likely ethnicities (top 10)",
                "items": {
                    "type": "string",
                    "description": "List most likely ethnicities (top 10)"
                }
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/diasporaBatch": {
        "type": "array",
        "description": "A list of diaspora / ethnicity given a name and residency.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Diaspora score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "ethnicityAlt": {
                "type": "string",
                "description": "The second best alternative ethnicity",
                "example": "Japanese",
                "xml": {
                    "attribute": true
                }
            },
            "ethnicity": {
                "type": "string",
                "description": "The most likely ethnicity",
                "example": "Chinese",
                "xml": {
                    "attribute": true
                }
            },
            "lifted": {
                "type": "boolean",
                "description": "Indicates if the output ethnicity is based on machine learning only, or further lifted as a known fact by a country-specific rule. Let us know if you believe ethnicity is incorrect on a specific case where lifted is true.",
                "xml": {
                    "attribute": true
                }
            },
            "countryIso2": {
                "type": "string",
                "description": "From input data, the countryIso2 of geographic context (US,CA etc.)",
                "xml": {
                    "attribute": true
                }
            },
            "ethnicitiesTop": {
                "type": "array",
                "description": "List most likely ethnicities (top 10)",
                "items": {
                    "type": "string",
                    "description": "List most likely ethnicities (top 10)"
                }
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for ethnicity to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            },
            "probabilityAltCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for ethnicity OR ethnicityAlt to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/parseName/{nameFull}/{countryIso2}": {
        "type": "object",
        "description": "A origined name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "nameParserType": {
                "type": "string",
                "description": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "nameParserTypeAlt": {
                "type": "string",
                "description": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "firstLastName": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/parseNameBatch": {
        "type": "array",
        "description": "A list of parsed names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "nameParserType": {
                "type": "string",
                "description": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "nameParserTypeAlt": {
                "type": "string",
                "description": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "firstLastName": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/parseNameGeoBatch": {
        "type": "array",
        "description": "A list of parsed names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "nameParserType": {
                "type": "string",
                "description": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "nameParserTypeAlt": {
                "type": "string",
                "description": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "firstLastName": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/parseChineseName/{chineseName}": {
        "type": "object",
        "description": "A origined name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "nameParserType": {
                "type": "string",
                "description": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "nameParserTypeAlt": {
                "type": "string",
                "description": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "firstLastName": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/parseChineseNameBatch": {
        "type": "array",
        "description": "A list of parsed names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "nameParserType": {
                "type": "string",
                "description": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "nameParserTypeAlt": {
                "type": "string",
                "description": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "firstLastName": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/pinyinChineseName/{chineseName}": {
        "type": "object",
        "description": "A pinyin name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "nameParserType": {
                "type": "string",
                "description": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "nameParserTypeAlt": {
                "type": "string",
                "description": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "firstLastName": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/pinyinChineseNameBatch": {
        "type": "array",
        "description": "A list of Pinyin names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "nameParserType": {
                "type": "string",
                "description": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "nameParserTypeAlt": {
                "type": "string",
                "description": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "firstLastName": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/chineseNameMatch/{chineseSurnameLatin}/{chineseGivenNameLatin}/{chineseName}": {
        "type": "object",
        "description": "A romanized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "matchStatus": {
                "type": "string",
                "description": "The name matching status.",
                "enum": [
                    "Match",
                    "Mismatch"
                ]
            },
            "score": {
                "type": "number",
                "format": "double"
            }
        }
    },
    "/api2/json/chineseNameMatchBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "matchStatus": {
                "type": "string",
                "description": "The name matching status.",
                "enum": [
                    "Match",
                    "Mismatch"
                ]
            },
            "score": {
                "type": "number",
                "format": "double"
            }
        }
    },
    "/api2/json/genderChineseNamePinyin/{chineseSurnameLatin}/{chineseGivenNameLatin}": {
        "type": "object",
        "description": "A genderized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderChineseNamePinyinBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderChineseName/{chineseName}": {
        "type": "object",
        "description": "A genderized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderChineseNameBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/chineseNameCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}": {
        "type": "object",
        "description": "A romanized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "orderOption": {
                "type": "string",
                "description": "The option for ordering"
            },
            "matchCandidates": [
                {
                    "candidateName": {
                        "type": "string",
                        "description": "The name matching candidate name"
                    },
                    "probability": {
                        "type": "number",
                        "description": "The name matching estimated probability.",
                        "format": "double"
                    },
                    "predScoreGivenName": {
                        "type": "number",
                        "description": "The given name prediction score.",
                        "format": "double"
                    },
                    "predScoreFamilyName": {
                        "type": "number",
                        "description": "The family name prediction score.",
                        "format": "double"
                    }
                }
            ]
        }
    },
    "/api2/json/chineseNameCandidatesBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "orderOption": {
                "type": "string",
                "description": "The option for ordering"
            },
            "matchCandidates": [
                {
                    "candidateName": {
                        "type": "string",
                        "description": "The name matching candidate name"
                    },
                    "probability": {
                        "type": "number",
                        "description": "The name matching estimated probability.",
                        "format": "double"
                    },
                    "predScoreGivenName": {
                        "type": "number",
                        "description": "The given name prediction score.",
                        "format": "double"
                    },
                    "predScoreFamilyName": {
                        "type": "number",
                        "description": "The family name prediction score.",
                        "format": "double"
                    }
                }
            ]
        }
    },
    "/api2/json/chineseNameGenderCandidates/{chineseSurnameLatin}/{chineseGivenNameLatin}/{knownGender}": {
        "type": "object",
        "description": "A romanized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "orderOption": {
                "type": "string",
                "description": "The option for ordering"
            },
            "matchCandidates": [
                {
                    "candidateName": {
                        "type": "string",
                        "description": "The name matching candidate name"
                    },
                    "probability": {
                        "type": "number",
                        "description": "The name matching estimated probability.",
                        "format": "double"
                    },
                    "predScoreGivenName": {
                        "type": "number",
                        "description": "The given name prediction score.",
                        "format": "double"
                    },
                    "predScoreFamilyName": {
                        "type": "number",
                        "description": "The family name prediction score.",
                        "format": "double"
                    }
                }
            ]
        }
    },
    "/api2/json/chineseNameCandidatesGenderBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "orderOption": {
                "type": "string",
                "description": "The option for ordering"
            },
            "matchCandidates": [
                {
                    "candidateName": {
                        "type": "string",
                        "description": "The name matching candidate name"
                    },
                    "probability": {
                        "type": "number",
                        "description": "The name matching estimated probability.",
                        "format": "double"
                    },
                    "predScoreGivenName": {
                        "type": "number",
                        "description": "The given name prediction score.",
                        "format": "double"
                    },
                    "predScoreFamilyName": {
                        "type": "number",
                        "description": "The family name prediction score.",
                        "format": "double"
                    }
                }
            ]
        }
    },
    "/api2/json/parseJapaneseName/{japaneseName}": {
        "type": "object",
        "description": "A origined name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "nameParserType": {
                "type": "string",
                "description": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "nameParserTypeAlt": {
                "type": "string",
                "description": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "firstLastName": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/parseJapaneseNameBatch": {
        "type": "array",
        "description": "A list of parsed names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "nameParserType": {
                "type": "string",
                "description": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "nameParserTypeAlt": {
                "type": "string",
                "description": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "firstLastName": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    },
    "/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}": {
        "type": "object",
        "description": "A romanized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "orderOption": {
                "type": "string",
                "description": "The option for ordering"
            },
            "matchCandidates": [
                {
                    "candidateName": {
                        "type": "string",
                        "description": "The name matching candidate name"
                    },
                    "probability": {
                        "type": "number",
                        "description": "The name matching estimated probability.",
                        "format": "double"
                    },
                    "predScoreGivenName": {
                        "type": "number",
                        "description": "The given name prediction score.",
                        "format": "double"
                    },
                    "predScoreFamilyName": {
                        "type": "number",
                        "description": "The family name prediction score.",
                        "format": "double"
                    }
                }
            ]
        }
    },
    "/api2/json/japaneseNameKanjiCandidates/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{knownGender}": {
        "type": "object",
        "description": "A romanized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "orderOption": {
                "type": "string",
                "description": "The option for ordering"
            },
            "matchCandidates": [
                {
                    "candidateName": {
                        "type": "string",
                        "description": "The name matching candidate name"
                    },
                    "probability": {
                        "type": "number",
                        "description": "The name matching estimated probability.",
                        "format": "double"
                    },
                    "predScoreGivenName": {
                        "type": "number",
                        "description": "The given name prediction score.",
                        "format": "double"
                    },
                    "predScoreFamilyName": {
                        "type": "number",
                        "description": "The family name prediction score.",
                        "format": "double"
                    }
                }
            ]
        }
    },
    "/api2/json/japaneseNameLatinCandidates/{japaneseSurnameKanji}/{japaneseGivenNameKanji}": {
        "type": "object",
        "description": "A romanized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "orderOption": {
                "type": "string",
                "description": "The option for ordering"
            },
            "matchCandidates": [
                {
                    "candidateName": {
                        "type": "string",
                        "description": "The name matching candidate name"
                    },
                    "probability": {
                        "type": "number",
                        "description": "The name matching estimated probability.",
                        "format": "double"
                    },
                    "predScoreGivenName": {
                        "type": "number",
                        "description": "The given name prediction score.",
                        "format": "double"
                    },
                    "predScoreFamilyName": {
                        "type": "number",
                        "description": "The family name prediction score.",
                        "format": "double"
                    }
                }
            ]
        }
    },
    "/api2/json/japaneseNameKanjiCandidatesBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "orderOption": {
                "type": "string",
                "description": "The option for ordering"
            },
            "matchCandidates": [
                {
                    "candidateName": {
                        "type": "string",
                        "description": "The name matching candidate name"
                    },
                    "probability": {
                        "type": "number",
                        "description": "The name matching estimated probability.",
                        "format": "double"
                    },
                    "predScoreGivenName": {
                        "type": "number",
                        "description": "The given name prediction score.",
                        "format": "double"
                    },
                    "predScoreFamilyName": {
                        "type": "number",
                        "description": "The family name prediction score.",
                        "format": "double"
                    }
                }
            ]
        }
    },
    "/api2/json/japaneseNameGenderKanjiCandidatesBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "orderOption": {
                "type": "string",
                "description": "The option for ordering"
            },
            "matchCandidates": [
                {
                    "candidateName": {
                        "type": "string",
                        "description": "The name matching candidate name"
                    },
                    "probability": {
                        "type": "number",
                        "description": "The name matching estimated probability.",
                        "format": "double"
                    },
                    "predScoreGivenName": {
                        "type": "number",
                        "description": "The given name prediction score.",
                        "format": "double"
                    },
                    "predScoreFamilyName": {
                        "type": "number",
                        "description": "The family name prediction score.",
                        "format": "double"
                    }
                }
            ]
        }
    },
    "/api2/json/japaneseNameLatinCandidatesBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "orderOption": {
                "type": "string",
                "description": "The option for ordering"
            },
            "matchCandidates": [
                {
                    "candidateName": {
                        "type": "string",
                        "description": "The name matching candidate name"
                    },
                    "probability": {
                        "type": "number",
                        "description": "The name matching estimated probability.",
                        "format": "double"
                    },
                    "predScoreGivenName": {
                        "type": "number",
                        "description": "The given name prediction score.",
                        "format": "double"
                    },
                    "predScoreFamilyName": {
                        "type": "number",
                        "description": "The family name prediction score.",
                        "format": "double"
                    }
                }
            ]
        }
    },
    "/api2/json/japaneseNameMatch/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}": {
        "type": "object",
        "description": "A romanized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "matchStatus": {
                "type": "string",
                "description": "The name matching status.",
                "enum": [
                    "Match",
                    "Mismatch"
                ]
            },
            "score": {
                "type": "number",
                "format": "double"
            }
        }
    },
    "/api2/json/japaneseNameMatchFeedbackLoop/{japaneseSurnameLatin}/{japaneseGivenNameLatin}/{japaneseName}": {
        "type": "object",
        "description": "A romanized name.",
        "schema": {
            "feedbackCredits": {
                "type": "integer",
                "description": "Number of units recredited as per feedback loop successful classification",
                "format": "int64"
            }
        }
    },
    "/api2/json/japaneseNameMatchBatch": {
        "type": "array",
        "description": "A list of matched names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "matchStatus": {
                "type": "string",
                "description": "The name matching status.",
                "enum": [
                    "Match",
                    "Mismatch"
                ]
            },
            "score": {
                "type": "number",
                "format": "double"
            }
        }
    },
    "/api2/json/genderJapaneseName/{japaneseSurname}/{japaneseGivenName}": {
        "type": "object",
        "description": "A genderized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderJapaneseNameBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderJapaneseNameFull/{japaneseName}": {
        "type": "object",
        "description": "A genderized name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/genderJapaneseNameFullBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "likelyGender": {
                "type": "string",
                "description": "Most likely gender",
                "enum": [
                    "male",
                    "female",
                    "unknown"
                ]
            },
            "genderScale": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender Scale M[-1..U..+1]F value.",
                "format": "double"
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Compatibility to NamSor_v1 Gender score value. Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "probabilityCalibrated": {
                "maximum": 1,
                "minimum": -1,
                "type": "number",
                "description": "The calibrated probability for inferred gender to have been guessed correctly. -1 = still calibrating. ",
                "format": "double"
            }
        }
    },
    "/api2/json/phoneCode/{firstName}/{lastName}/{phoneNumber}": {
        "type": "object",
        "description": "A name with country and phone code.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "internationalPhoneNumberVerified": {
                "type": "string",
                "description": "The normalized phone number, verified using libphonenumber."
            },
            "phoneCountryIso2Verified": {
                "type": "string",
                "description": "The phone ISO2 country code, verified using libphonenumber."
            },
            "phoneCountryCode": {
                "type": "integer",
                "description": "The phone country code of the phone number, verified using libphonenumber.",
                "format": "int32"
            },
            "phoneCountryCodeAlt": {
                "type": "integer",
                "description": "The best alternative phone country code of the phone number.",
                "format": "int32"
            },
            "phoneCountryIso2": {
                "type": "string",
                "description": "The likely country of the phone number."
            },
            "phoneCountryIso2Alt": {
                "type": "string",
                "description": "The best alternative country of the phone number."
            },
            "originCountryIso2": {
                "type": "string",
                "description": "The likely country of origin of the name."
            },
            "originCountryIso2Alt": {
                "type": "string",
                "description": "The best alternative country of origin of the name."
            },
            "phoneNumber": {
                "type": "string",
                "description": "The input phone number."
            },
            "verified": {
                "type": "boolean",
                "description": "Indicates if the phone number could be positively verified using libphonenumber."
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "countryIso2": {
                "type": "string"
            }
        }
    },
    "/api2/json/phoneCodeGeo/{firstName}/{lastName}/{phoneNumber}/{countryIso2}": {
        "type": "object",
        "description": "A name with country and phone code.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "internationalPhoneNumberVerified": {
                "type": "string",
                "description": "The normalized phone number, verified using libphonenumber."
            },
            "phoneCountryIso2Verified": {
                "type": "string",
                "description": "The phone ISO2 country code, verified using libphonenumber."
            },
            "phoneCountryCode": {
                "type": "integer",
                "description": "The phone country code of the phone number, verified using libphonenumber.",
                "format": "int32"
            },
            "phoneCountryCodeAlt": {
                "type": "integer",
                "description": "The best alternative phone country code of the phone number.",
                "format": "int32"
            },
            "phoneCountryIso2": {
                "type": "string",
                "description": "The likely country of the phone number."
            },
            "phoneCountryIso2Alt": {
                "type": "string",
                "description": "The best alternative country of the phone number."
            },
            "originCountryIso2": {
                "type": "string",
                "description": "The likely country of origin of the name."
            },
            "originCountryIso2Alt": {
                "type": "string",
                "description": "The best alternative country of origin of the name."
            },
            "phoneNumber": {
                "type": "string",
                "description": "The input phone number."
            },
            "verified": {
                "type": "boolean",
                "description": "Indicates if the phone number could be positively verified using libphonenumber."
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "countryIso2": {
                "type": "string"
            }
        }
    },
    "/api2/json/phoneCodeGeoFeedbackLoop/{firstName}/{lastName}/{phoneNumber}/{phoneNumberE164}/{countryIso2}": {
        "type": "object",
        "description": "A name with country and phone code.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "internationalPhoneNumberVerified": {
                "type": "string",
                "description": "The normalized phone number, verified using libphonenumber."
            },
            "phoneCountryIso2Verified": {
                "type": "string",
                "description": "The phone ISO2 country code, verified using libphonenumber."
            },
            "phoneCountryCode": {
                "type": "integer",
                "description": "The phone country code of the phone number, verified using libphonenumber.",
                "format": "int32"
            },
            "phoneCountryCodeAlt": {
                "type": "integer",
                "description": "The best alternative phone country code of the phone number.",
                "format": "int32"
            },
            "phoneCountryIso2": {
                "type": "string",
                "description": "The likely country of the phone number."
            },
            "phoneCountryIso2Alt": {
                "type": "string",
                "description": "The best alternative country of the phone number."
            },
            "originCountryIso2": {
                "type": "string",
                "description": "The likely country of origin of the name."
            },
            "originCountryIso2Alt": {
                "type": "string",
                "description": "The best alternative country of origin of the name."
            },
            "phoneNumber": {
                "type": "string",
                "description": "The input phone number."
            },
            "verified": {
                "type": "boolean",
                "description": "Indicates if the phone number could be positively verified using libphonenumber."
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "countryIso2": {
                "type": "string"
            }
        }
    },
    "/api2/json/phoneCodeBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "internationalPhoneNumberVerified": {
                "type": "string",
                "description": "The normalized phone number, verified using libphonenumber."
            },
            "phoneCountryIso2Verified": {
                "type": "string",
                "description": "The phone ISO2 country code, verified using libphonenumber."
            },
            "phoneCountryCode": {
                "type": "integer",
                "description": "The phone country code of the phone number, verified using libphonenumber.",
                "format": "int32"
            },
            "phoneCountryCodeAlt": {
                "type": "integer",
                "description": "The best alternative phone country code of the phone number.",
                "format": "int32"
            },
            "phoneCountryIso2": {
                "type": "string",
                "description": "The likely country of the phone number."
            },
            "phoneCountryIso2Alt": {
                "type": "string",
                "description": "The best alternative country of the phone number."
            },
            "originCountryIso2": {
                "type": "string",
                "description": "The likely country of origin of the name."
            },
            "originCountryIso2Alt": {
                "type": "string",
                "description": "The best alternative country of origin of the name."
            },
            "phoneNumber": {
                "type": "string",
                "description": "The input phone number."
            },
            "verified": {
                "type": "boolean",
                "description": "Indicates if the phone number could be positively verified using libphonenumber."
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "countryIso2": {
                "type": "string"
            }
        }
    },
    "/api2/json/phoneCodeGeoBatch": {
        "type": "array",
        "description": "A list of genderized names.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "firstName": {
                "type": "string",
                "description": "The first name (also known as given name)"
            },
            "lastName": {
                "type": "string",
                "description": "The last name (also known as family name, or surname)"
            },
            "internationalPhoneNumberVerified": {
                "type": "string",
                "description": "The normalized phone number, verified using libphonenumber."
            },
            "phoneCountryIso2Verified": {
                "type": "string",
                "description": "The phone ISO2 country code, verified using libphonenumber."
            },
            "phoneCountryCode": {
                "type": "integer",
                "description": "The phone country code of the phone number, verified using libphonenumber.",
                "format": "int32"
            },
            "phoneCountryCodeAlt": {
                "type": "integer",
                "description": "The best alternative phone country code of the phone number.",
                "format": "int32"
            },
            "phoneCountryIso2": {
                "type": "string",
                "description": "The likely country of the phone number."
            },
            "phoneCountryIso2Alt": {
                "type": "string",
                "description": "The best alternative country of the phone number."
            },
            "originCountryIso2": {
                "type": "string",
                "description": "The likely country of origin of the name."
            },
            "originCountryIso2Alt": {
                "type": "string",
                "description": "The best alternative country of origin of the name."
            },
            "phoneNumber": {
                "type": "string",
                "description": "The input phone number."
            },
            "verified": {
                "type": "boolean",
                "description": "Indicates if the phone number could be positively verified using libphonenumber."
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            },
            "countryIso2": {
                "type": "string"
            }
        }
    },
    "/api2/json/parseName/{nameFull}": {
        "type": "object",
        "description": "A origined name.",
        "schema": {
            "script": {
                "type": "string"
            },
            "id": {
                "type": "string"
            },
            "name": {
                "type": "string",
                "description": "The input name"
            },
            "nameParserType": {
                "type": "string",
                "description": "Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "nameParserTypeAlt": {
                "type": "string",
                "description": "Second best alternative parsing. Name parsing is addressed as a classification problem, for example FN1LN1 means a first then last name order.",
                "enum": [
                    "FN1LN1",
                    "LN1FN1",
                    "FN1LN2",
                    "LN2FN1",
                    "FN1LNx",
                    "LNxFN1",
                    "FN2LN1",
                    "LN1FN2",
                    "FN2LN2",
                    "LN2FN2",
                    "FN2LNx",
                    "LNxFN2",
                    "FNxLN1",
                    "LN1FNx",
                    "FNxLN2",
                    "LN2FNx",
                    "FNxLNx",
                    "LNxFNx"
                ]
            },
            "firstLastName": {
                "script": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string",
                    "description": "The first name (also known as given name)"
                },
                "lastName": {
                    "type": "string",
                    "description": "The last name (also known as family name, or surname)"
                }
            },
            "score": {
                "maximum": 100,
                "minimum": 0,
                "type": "number",
                "description": "Higher score is better, but score is not normalized. Use calibratedProbability if available. ",
                "format": "double"
            }
        }
    }
}